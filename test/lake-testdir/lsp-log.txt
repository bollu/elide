[Trace - 02:37:46 AM] Sending request 'initialize - (1)'.
Params: {
  "processId": 12749,
  "rootPath": "/home/bollu/software/edtr/build/test/lake-testdir",
  "clientInfo": {
    "name": "emacs",
    "version": "GNU Emacs 28.1 (build 3, x86_64-pc-linux-gnu, GTK+ Version 3.24.33, cairo version 1.16.0)\n of 2023-09-17"
  },
  "rootUri": "file:///home/bollu/software/edtr/build/test/lake-testdir",
  "capabilities": {
    "general": {
      "positionEncodings": [
        "utf-32",
        "utf-16"
      ]
    },
    "workspace": {
      "workspaceEdit": {
        "documentChanges": true,
        "resourceOperations": [
          "create",
          "rename",
          "delete"
        ]
      },
      "applyEdit": true,
      "symbol": {
        "symbolKind": {
          "valueSet": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ]
        }
      },
      "executeCommand": {
        "dynamicRegistration": false
      },
      "workspaceFolders": true,
      "configuration": true,
      "semanticTokens": {
        "refreshSupport": false
      },
      "codeLens": {
        "refreshSupport": true
      },
      "fileOperations": {
        "didCreate": false,
        "willCreate": false,
        "didRename": true,
        "willRename": true,
        "didDelete": false,
        "willDelete": false
      }
    },
    "textDocument": {
      "declaration": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "definition": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "references": {
        "dynamicRegistration": true
      },
      "implementation": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "typeDefinition": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "synchronization": {
        "willSave": true,
        "didSave": true,
        "willSaveWaitUntil": true
      },
      "documentSymbol": {
        "symbolKind": {
          "valueSet": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ]
        },
        "hierarchicalDocumentSymbolSupport": true
      },
      "formatting": {
        "dynamicRegistration": true
      },
      "rangeFormatting": {
        "dynamicRegistration": true
      },
      "onTypeFormatting": {
        "dynamicRegistration": true
      },
      "semanticTokens": {
        "dynamicRegistration": true,
        "requests": {
          "range": true,
          "full": true
        },
        "tokenModifiers": [
          "declaration",
          "definition",
          "implementation",
          "readonly",
          "static",
          "deprecated",
          "abstract",
          "async",
          "modification",
          "documentation",
          "defaultLibrary"
        ],
        "overlappingTokenSupport": true,
        "multilineTokenSupport": true,
        "tokenTypes": [
          "leanSorryLike",
          "comment",
          "keyword",
          "string",
          "number",
          "regexp",
          "operator",
          "namespace",
          "type",
          "struct",
          "class",
          "interface",
          "enum",
          "typeParameter",
          "function",
          "method",
          "member",
          "property",
          "event",
          "macro",
          "variable",
          "parameter",
          "label",
          "enumConstant",
          "enumMember",
          "dependent",
          "concept"
        ],
        "formats": [
          "relative"
        ]
      },
      "rename": {
        "dynamicRegistration": true,
        "prepareSupport": true
      },
      "codeAction": {
        "dynamicRegistration": true,
        "isPreferredSupport": true,
        "codeActionLiteralSupport": {
          "codeActionKind": {
            "valueSet": [
              "",
              "quickfix",
              "refactor",
              "refactor.extract",
              "refactor.inline",
              "refactor.rewrite",
              "source",
              "source.organizeImports"
            ]
          }
        },
        "resolveSupport": {
          "properties": [
            "edit",
            "command"
          ]
        },
        "dataSupport": true
      },
      "completion": {
        "completionItem": {
          "snippetSupport": false,
          "documentationFormat": [
            "markdown",
            "plaintext"
          ],
          "resolveAdditionalTextEditsSupport": true,
          "insertReplaceSupport": true,
          "deprecatedSupport": true,
          "resolveSupport": {
            "properties": [
              "documentation",
              "detail",
              "additionalTextEdits",
              "command"
            ]
          },
          "insertTextModeSupport": {
            "valueSet": [
              1,
              2
            ]
          }
        },
        "contextSupport": true,
        "dynamicRegistration": true
      },
      "signatureHelp": {
        "signatureInformation": {
          "parameterInformation": {
            "labelOffsetSupport": true
          }
        },
        "dynamicRegistration": true
      },
      "documentLink": {
        "dynamicRegistration": true,
        "tooltipSupport": true
      },
      "hover": {
        "contentFormat": [
          "markdown",
          "plaintext"
        ],
        "dynamicRegistration": true
      },
      "foldingRange": {
        "dynamicRegistration": true
      },
      "selectionRange": {
        "dynamicRegistration": true
      },
      "callHierarchy": {
        "dynamicRegistration": false
      },
      "typeHierarchy": {
        "dynamicRegistration": true
      },
      "publishDiagnostics": {
        "relatedInformation": true,
        "tagSupport": {
          "valueSet": [
            1,
            2
          ]
        },
        "versionSupport": true
      },
      "linkedEditingRange": {
        "dynamicRegistration": true
      }
    },
    "window": {
      "workDoneProgress": true,
      "showDocument": {
        "support": true
      }
    }
  },
  "initializationOptions": null,
  "workDoneToken": "1"
}


[Trace - 02:37:47 AM] Received response 'initialize - (1)' in 957ms.
Result: {
  "serverInfo": {
    "version": "0.1.2",
    "name": "Lean 4 Server"
  },
  "capabilities": {
    "workspaceSymbolProvider": true,
    "typeDefinitionProvider": true,
    "textDocumentSync": {
      "willSaveWaitUntil": null,
      "willSave": null,
      "openClose": true,
      "change": 2
    },
    "semanticTokensProvider": {
      "range": true,
      "legend": {
        "tokenTypes": [
          "keyword",
          "variable",
          "property",
          "function",
          "namespace",
          "type",
          "class",
          "enum",
          "interface",
          "struct",
          "typeParameter",
          "parameter",
          "enumMember",
          "event",
          "method",
          "macro",
          "modifier",
          "comment",
          "string",
          "number",
          "regexp",
          "operator",
          "decorator",
          "leanSorryLike"
        ],
        "tokenModifiers": [
          "declaration",
          "definition",
          "readonly",
          "static",
          "deprecated",
          "abstract",
          "async",
          "modification",
          "documentation",
          "defaultLibrary"
        ]
      },
      "full": true
    },
    "referencesProvider": true,
    "hoverProvider": true,
    "foldingRangeProvider": true,
    "documentSymbolProvider": true,
    "documentHighlightProvider": true,
    "definitionProvider": true,
    "declarationProvider": true,
    "completionProvider": {
      "triggerCharacters": [
        "."
      ],
      "resolveProvider": null
    },
    "codeActionProvider": {
      "workDoneProgress": null,
      "resolveProvider": true,
      "codeActionKinds": [
        "quickfix",
        "refactor"
      ]
    }
  }
}


[Trace - 02:37:47 AM] Sending notification 'initialized'.
Params: {}


[Trace - 02:37:47 AM] Sending notification 'textDocument/didOpen'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "languageId": "lean",
    "version": 0,
    "text": "import «LakeTestdir»\n\ndef foo (y : String) : String := by\n  have H := hello\n  exact (H ++ y)\n\ndef main : IO Unit :=\n  IO.println s!\"Hello, {hello}!\"\n"
  }
}


[Trace - 02:37:47 AM] Sending request 'textDocument/semanticTokens/range - (2)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:37:47 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 2
}


[Trace - 02:37:47 AM] Sending request 'textDocument/semanticTokens/range - (3)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:37:47 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 3
}


[Trace - 02:37:47 AM] Sending request 'textDocument/semanticTokens/range - (4)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:37:47 AM] Received request 'client/registerCapability - (register_ilean_watcher).
Params: {
  "registrations": [
    {
      "registerOptions": {
        "watchers": [
          {
            "kind": null,
            "globPattern": "**/*.ilean"
          }
        ]
      },
      "method": "workspace/didChangeWatchedFiles",
      "id": "ilean_watcher"
    }
  ]
}


[Trace - 02:37:47 AM] Sending response 'client/registerCapability - (register_ilean_watcher)'. Processing request took 2ms
Params: {
  "jsonrpc": "2.0",
  "id": "register_ilean_watcher",
  "result": null
}


[Trace - 02:37:47 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 4
}


[Trace - 02:37:47 AM] Sending request 'textDocument/semanticTokens/range - (5)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:37:47 AM] Sending request 'textDocument/documentSymbol - (6)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:37:47 AM] Sending request 'textDocument/codeAction - (7)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 5,
      "character": 0
    },
    "end": {
      "line": 5,
      "character": 0
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:47 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:47 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 0,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:47 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:47 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 0,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:47 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:47 AM] Received response 'textDocument/codeAction - (7)' in 274ms.
Result: []


[Trace - 02:37:47 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 0,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:47 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:47 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 0,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:47 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 0,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:47 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 0,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:37:47 AM] Received response 'nil - (2)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:47 AM] Received response 'nil - (3)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:47 AM] Received response 'textDocument/semanticTokens/range - (5)' in 277ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:47 AM] Received response 'nil - (4)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:47 AM] Received response 'textDocument/documentSymbol - (6)' in 275ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 2,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 6,
        "character": 4
      },
      "end": {
        "line": 6,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 7,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:37:48 AM] Sending request 'textDocument/codeAction - (8)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 5
    },
    "end": {
      "line": 2,
      "character": 5
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:48 AM] Sending request 'textDocument/documentHighlight - (9)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 5
  }
}


[Trace - 02:37:48 AM] Sending request 'textDocument/semanticTokens/full - (10)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:37:48 AM] Sending request 'textDocument/hover - (11)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 5
  }
}


[Trace - 02:37:48 AM] Received response 'textDocument/codeAction - (8)' in 2ms.
Result: []


[Trace - 02:37:48 AM] Received response 'textDocument/documentHighlight - (9)' in 2ms.
Result: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "kind": 1
  }
]


[Trace - 02:37:48 AM] Received response 'textDocument/semanticTokens/full - (10)' in 2ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:48 AM] Received response 'textDocument/hover - (11)' in 16ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 4
    },
    "end": {
      "line": 2,
      "character": 7
    }
  },
  "contents": {
    "value": "```lean\nfoo (y : String) : String\n```",
    "kind": "markdown"
  }
}


[Trace - 02:37:50 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 1
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 5
        },
        "end": {
          "line": 2,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "w"
    }
  ]
}


[Trace - 02:37:50 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 2
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 6
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": "w"
    }
  ]
}


[Trace - 02:37:50 AM] Sending request 'textDocument/completion - (12)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 7
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:37:50 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 2,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 2,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:50 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 2,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:50 AM] Received response 'textDocument/completion - (12)' in 1ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:37:50 AM] Sending request 'textDocument/completion - (13)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 7
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:37:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 2,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:50 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 2,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:50 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 2,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:50 AM] Received response 'textDocument/completion - (13)' in 7ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:37:50 AM] Sending request 'textDocument/completion - (14)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 7
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:37:50 AM] Received response 'textDocument/completion - (14)' in 1ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:37:50 AM] Sending request 'textDocument/completion - (15)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 7
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:37:50 AM] Received response 'textDocument/completion - (15)' in 1ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:37:50 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 3
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 6
        },
        "end": {
          "line": 2,
          "character": 7
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:37:50 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 4
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 5
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:37:51 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:51 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 4,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:51 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:51 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 4,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:51 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:37:51 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 4,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:51 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 4,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:37:51 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 4,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:37:51 AM] Sending request 'textDocument/documentSymbol - (16)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:37:51 AM] Sending request 'textDocument/codeAction - (17)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 6
    },
    "end": {
      "line": 2,
      "character": 6
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:51 AM] Sending request 'textDocument/documentHighlight - (18)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 6
  }
}


[Trace - 02:37:51 AM] Sending request 'textDocument/semanticTokens/range - (19)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:37:51 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 19
}


[Trace - 02:37:51 AM] Sending request 'textDocument/semanticTokens/full - (20)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:37:51 AM] Received response 'textDocument/codeAction - (17)' in 3ms.
Result: []


[Trace - 02:37:51 AM] Received response 'textDocument/documentSymbol - (16)' in 3ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 2,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 6,
        "character": 4
      },
      "end": {
        "line": 6,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 7,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:37:51 AM] Received response 'nil - (19)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:51 AM] Received response 'textDocument/documentHighlight - (18)' in 3ms.
Result: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "kind": 1
  }
]


[Trace - 02:37:51 AM] Received response 'textDocument/semanticTokens/full - (20)' in 2ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:37:53 AM] Sending request 'textDocument/codeAction - (21)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 29
    },
    "end": {
      "line": 2,
      "character": 29
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:53 AM] Received response 'textDocument/codeAction - (21)' in 1ms.
Result: []


[Trace - 02:37:54 AM] Sending request 'textDocument/hover - (22)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  }
}


[Trace - 02:37:54 AM] Sending request 'textDocument/codeAction - (23)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:54 AM] Sending request 'textDocument/documentHighlight - (24)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  }
}


[Trace - 02:37:54 AM] Received response 'textDocument/codeAction - (23)' in 1ms.
Result: []


(* HOVER INFO *)
[Trace - 02:37:54 AM] Received response 'textDocument/hover - (22)' in 2ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 23
    },
    "end": {
      "line": 2,
      "character": 29
    }
  },
  "contents": {
    "value": "```lean\nString : Type\n```\n***\n`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n\n***\n*import Init.Prelude*",
    "kind": "markdown"
  }
}


[Trace - 02:37:54 AM] Received response 'textDocument/documentHighlight - (24)' in 4ms.
Result: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 13
      },
      "end": {
        "line": 2,
        "character": 19
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 23
      },
      "end": {
        "line": 2,
        "character": 29
      }
    },
    "kind": 1
  }
]


[Trace - 02:37:55 AM] Sending request 'textDocument/codeAction - (25)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:55 AM] Received response 'textDocument/codeAction - (25)' in 1ms.
Result: []


[Trace - 02:37:58 AM] Sending request 'textDocument/codeAction - (26)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:37:58 AM] Received response 'textDocument/codeAction - (26)' in 1ms.
Result: []


[Trace - 02:38:01 AM] Sending request 'textDocument/typeDefinition - (27)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  }
}


[Trace - 02:38:01 AM] Received response 'textDocument/typeDefinition - (27)' in 1ms.
Result: []


[Trace - 02:38:02 AM] Sending request 'textDocument/codeAction - (28)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:02 AM] Received response 'textDocument/codeAction - (28)' in 1ms.
Result: []


[Trace - 02:38:07 AM] Sending request 'textDocument/typeDefinition - (29)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  }
}


[Trace - 02:38:07 AM] Received response 'textDocument/typeDefinition - (29)' in 1ms.
Result: []


[Trace - 02:38:07 AM] Sending request 'textDocument/codeAction - (30)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:07 AM] Received response 'textDocument/codeAction - (30)' in 1ms.
Result: []


[Trace - 02:38:12 AM] Sending request 'textDocument/codeAction - (31)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:12 AM] Received response 'textDocument/codeAction - (31)' in 1ms.
Result: []


[Trace - 02:38:12 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 5
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 0,
      "text": "j"
    }
  ]
}


[Trace - 02:38:13 AM] Sending request 'textDocument/completion - (32)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 29
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 5,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinjg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 5,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinjg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 5,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinjg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 5,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinjg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 5,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:13 AM] Received response 'textDocument/completion - (32)' in 43ms.
Result: {
  "items": [
    {
      "label": "Strinjg",
      "kind": 6,
      "detail": "Sort u_1"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:13 AM] Sending request 'textDocument/hover - (33)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 29
  }
}


[Trace - 02:38:13 AM] Sending request 'textDocument/semanticTokens/full - (34)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:13 AM] Received response 'textDocument/hover - (33)' in 2ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 23
    },
    "end": {
      "line": 2,
      "character": 30
    }
  },
  "contents": {
    "value": "```lean\nStrinjg : Sort u_1\n```",
    "kind": "markdown"
  }
}


[Trace - 02:38:13 AM] Received response 'textDocument/semanticTokens/full - (34)' in 24ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    14,
    7,
    1,
    0,
    0,
    11,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:13 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 6
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 29
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:13 AM] Sending request 'textDocument/completion - (35)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 6,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 6,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 6,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 6,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 6,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 6,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:13 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 6,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:13 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 6,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:13 AM] Received response 'textDocument/completion - (35)' in 264ms.
Result: {
  "items": [
    {
      "label": "String",
      "kind": 22,
      "documentation": {
        "value": "`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "Substring",
      "kind": 22,
      "documentation": {
        "value": "A `Substring` is a view into some subslice of a `String`.\nThe actual string slicing is deferred because this would require copying the\nstring; here we only store a reference to the original string for\ngarbage collection purposes.\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "ToString",
      "kind": 7,
      "detail": "Type u → Type u"
    },
    {
      "label": "toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "instCoeStringError",
      "kind": 21,
      "detail": "Coe String IO.Error"
    },
    {
      "label": "instHashableString",
      "kind": 21,
      "detail": "Hashable String"
    },
    {
      "label": "instOrdString",
      "kind": 21,
      "detail": "Ord String"
    },
    {
      "label": "instReprString",
      "kind": 21,
      "detail": "Repr String"
    },
    {
      "label": "instToStringBool",
      "kind": 21,
      "detail": "ToString Bool"
    },
    {
      "label": "instToStringByteArray",
      "kind": 21,
      "detail": "ToString ByteArray"
    },
    {
      "label": "instToStringChar",
      "kind": 21,
      "detail": "ToString Char"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringExcept",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (Except ε α)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringFloat",
      "kind": 21,
      "detail": "ToString Float"
    },
    {
      "label": "instToStringFloatArray",
      "kind": 21,
      "detail": "ToString FloatArray"
    },
    {
      "label": "instToStringFormat",
      "kind": 21,
      "detail": "ToString Std.Format"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringNat",
      "kind": 21,
      "detail": "ToString Nat"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringPos",
      "kind": 21,
      "detail": "ToString String.Pos"
    },
    {
      "label": "instToStringProd",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α × β)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instToStringSubarray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subarray α)"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringSubtype",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subtype p)"
    },
    {
      "label": "instToStringSum",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α ⊕ β)"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instDecidableEqString",
      "kind": 3,
      "detail": "DecidableEq String"
    },
    {
      "label": "instReprAtomString",
      "kind": 21,
      "detail": "ReprAtom String"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "instHAddPosString",
      "kind": 21,
      "detail": "HAdd String.Pos String String.Pos"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "strictAnd",
      "kind": 3,
      "documentation": {
        "value": "`strictAnd` is the same as `and`, but it does not use short-circuit evaluation semantics:\nboth sides are evaluated, even if the first value is `false`.\n",
        "kind": "markdown"
      },
      "detail": "Bool → Bool → Bool"
    },
    {
      "label": "instStreamSubstringChar",
      "kind": 21,
      "detail": "Stream Substring Char"
    },
    {
      "label": "instInhabitedSubstring",
      "kind": 21,
      "detail": "Inhabited Substring"
    },
    {
      "label": "instReprSubstring",
      "kind": 21,
      "detail": "Repr Substring"
    },
    {
      "label": "Char.toString",
      "kind": 3,
      "detail": "Char → String"
    },
    {
      "label": "Float.toString",
      "kind": 3,
      "detail": "Float → String"
    },
    {
      "label": "Lean.versionString",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "Lean.versionStringCore",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "List.asString",
      "kind": 3,
      "detail": "List Char → String"
    },
    {
      "label": "List.toString",
      "kind": 3,
      "detail": "[inst : ToString α] → List α → String"
    },
    {
      "label": "Substring.toString",
      "kind": 3,
      "detail": "Substring → String"
    },
    {
      "label": "ToString.toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "Array.instToStringArray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Array α)"
    },
    {
      "label": "EStateM.instToStringResult",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (EStateM.Result ε σ α)"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "Nat.toSuperscriptString",
      "kind": 3,
      "detail": "Nat → String"
    },
    {
      "label": "String.instAppendString",
      "kind": 21,
      "detail": "Append String"
    },
    {
      "label": "String.instInhabitedString",
      "kind": 21,
      "detail": "Inhabited String"
    },
    {
      "label": "String.instLTString",
      "kind": 21,
      "detail": "LT String"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "Std.instToFormatString",
      "kind": 21,
      "detail": "Std.ToFormat String"
    },
    {
      "label": "Classical.strongIndefiniteDescription",
      "kind": 3,
      "detail": "(p : α → Prop) → Nonempty α → { x // (∃ y, p y) → p x }"
    },
    {
      "label": "IO.Error.toString",
      "kind": 3,
      "detail": "IO.Error → String"
    },
    {
      "label": "Lean.Name.toString",
      "kind": 3,
      "detail": "Lean.Name → optParam Bool true → String"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "Lean.TSyntax.getString",
      "kind": 3,
      "detail": "Lean.StrLit → String"
    },
    {
      "label": "String.Iterator.toString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "System.FilePath.toString",
      "kind": 5,
      "detail": "System.FilePath → String"
    },
    {
      "label": "System.SearchPath.toString",
      "kind": 3,
      "detail": "System.SearchPath → String"
    },
    {
      "label": "Lean.strLitKind",
      "kind": 21,
      "documentation": {
        "value": "`str` is the node kind of string literals like `\"foo\"`. ",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.strongInductionOn",
      "kind": 3,
      "detail": "(n : Nat) → ((n : Nat) → ((m : Nat) → m < n → motive m) → motive n) → motive n"
    },
    {
      "label": "IO.Error.instToStringError",
      "kind": 21,
      "detail": "ToString IO.Error"
    },
    {
      "label": "Lean.Name.instToStringName",
      "kind": 21,
      "detail": "ToString Lean.Name"
    },
    {
      "label": "Lean.Syntax.instToStringSyntax",
      "kind": 21,
      "detail": "ToString Lean.Syntax"
    },
    {
      "label": "Lean.Syntax.instToStringTSyntax",
      "kind": 3,
      "detail": "ToString (Lean.TSyntax k)"
    },
    {
      "label": "Std.Format.instCoeStringFormat",
      "kind": 21,
      "detail": "Coe String Std.Format"
    },
    {
      "label": "String.Iterator.remainingToString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "String.toSubstring",
      "kind": 3,
      "documentation": {
        "value": "Convert a `String` into a `Substring` denoting the entire string. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "IO.Error.fopenErrorToString",
      "kind": 3,
      "detail": "String → String → UInt32 → Option String → String"
    },
    {
      "label": "IO.Error.otherErrorToString",
      "kind": 3,
      "detail": "String → UInt32 → Option String → String"
    },
    {
      "label": "System.FilePath.instHDivFilePathString",
      "kind": 21,
      "detail": "HDiv System.FilePath String System.FilePath"
    },
    {
      "label": "Lean.instQuoteSubstringMkStr1",
      "kind": 21,
      "detail": "Lean.Quote Substring"
    },
    {
      "label": "Lean.interpolatedStrKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrKind` is the node kind of an interpolated string literal\nlike `\"value = {x}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Lean.interpolatedStrLitKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrLitKind` is the node kind of interpolated string literal\nfragments like `\"value = {` and `}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.caseStrongInductionOn",
      "kind": 3,
      "detail": "(a : Nat) → motive 0 → ((n : Nat) → ((m : Nat) → m ≤ n → motive m) → motive (Nat.succ n)) → motive a"
    },
    {
      "label": "String.toSubstring'",
      "kind": 3,
      "documentation": {
        "value": "`String.toSubstring` without `[inline]` annotation. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "ShareCommon.StateFactoryPointed",
      "kind": 21,
      "detail": "NonemptyType"
    },
    {
      "label": "Lean.Syntax.getSubstring?",
      "kind": 3,
      "documentation": {
        "value": "Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). ",
        "kind": "markdown"
      },
      "detail": "Lean.Syntax → optParam Bool true → optParam Bool true → Option Substring"
    },
    {
      "label": "Fin.instShiftRightFin",
      "kind": 3,
      "detail": "ShiftRight (Fin n)"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:14 AM] Sending request 'textDocument/semanticTokens/full - (36)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:14 AM] Received response 'textDocument/semanticTokens/full - (36)' in 1ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:16 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 7
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 5,
      "text": ""
    }
  ]
}


[Trace - 02:38:16 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 8
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "String.instAppendString"
    }
  ]
}


[Trace - 02:38:16 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 9
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 46
        }
      },
      "rangeLength": 23,
      "text": ""
    }
  ]
}


[Trace - 02:38:16 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 10
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "Strin"
    }
  ]
}


[Trace - 02:38:16 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 11
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 5,
      "text": ""
    }
  ]
}


[Trace - 02:38:16 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 12
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "String.instAppendString"
    }
  ]
}


[Trace - 02:38:16 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 12,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:16 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 12,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      },
      "message": "unknown constant 'String.instAppendStringg'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      }
    }
  ]
}


[Trace - 02:38:16 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 12,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:16 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 12,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      },
      "message": "unknown constant 'String.instAppendStringg'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      }
    }
  ]
}


[Trace - 02:38:16 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 12,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:16 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 12,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      },
      "message": "unknown constant 'String.instAppendStringg'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      }
    }
  ]
}


[Trace - 02:38:16 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 12,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      },
      "message": "unknown constant 'String.instAppendStringg'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 47
        }
      }
    }
  ]
}


[Trace - 02:38:16 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 12,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:17 AM] Sending request 'textDocument/documentSymbol - (37)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:17 AM] Sending request 'textDocument/codeAction - (38)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 46
    },
    "end": {
      "line": 2,
      "character": 46
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 1,
        "range": {
          "start": {
            "line": 2,
            "character": 23
          },
          "end": {
            "line": 2,
            "character": 47
          }
        },
        "message": "unknown constant 'String.instAppendStringg'",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 23
          },
          "end": {
            "line": 2,
            "character": 47
          }
        }
      }
    ]
  }
}


[Trace - 02:38:17 AM] Sending request 'textDocument/documentHighlight - (39)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 46
  }
}


[Trace - 02:38:17 AM] Sending request 'textDocument/semanticTokens/range - (40)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:38:17 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 40
}


[Trace - 02:38:17 AM] Sending request 'textDocument/semanticTokens/full - (41)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:17 AM] Sending request 'textDocument/hover - (42)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 46
  }
}


[Trace - 02:38:17 AM] Received response 'textDocument/documentSymbol - (37)' in 5ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 2,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 6,
        "character": 4
      },
      "end": {
        "line": 6,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 7,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:38:17 AM] Received response 'textDocument/codeAction - (38)' in 5ms.
Result: []


[Trace - 02:38:17 AM] Received response 'textDocument/hover - (42)' in 3ms.
Result: null


[Trace - 02:38:17 AM] Received response 'textDocument/documentHighlight - (39)' in 4ms.
Result: []


[Trace - 02:38:17 AM] Received response 'textDocument/semanticTokens/full - (41)' in 4ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    42,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:17 AM] Received response 'nil - (40)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    42,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:17 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 13
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 46
        }
      },
      "rangeLength": 23,
      "text": ""
    }
  ]
}


[Trace - 02:38:17 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 14
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "Strin"
    }
  ]
}


[Trace - 02:38:17 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 15
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 5,
      "text": ""
    }
  ]
}


[Trace - 02:38:17 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 16
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "String.instAppendString"
    }
  ]
}


[Trace - 02:38:17 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 17
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 46
        }
      },
      "rangeLength": 23,
      "text": ""
    }
  ]
}


[Trace - 02:38:17 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 18
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 23
        },
        "end": {
          "line": 2,
          "character": 23
        }
      },
      "rangeLength": 0,
      "text": "Strin"
    }
  ]
}


[Trace - 02:38:17 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 18,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:17 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 18,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:17 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 18,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:17 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 18,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:17 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 18,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:17 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 18,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:17 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 18,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:17 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 18,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:18 AM] Sending request 'textDocument/documentSymbol - (43)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:18 AM] Sending request 'textDocument/codeAction - (44)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:18 AM] Sending request 'textDocument/documentHighlight - (45)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  }
}


[Trace - 02:38:18 AM] Sending request 'textDocument/hover - (46)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  }
}


[Trace - 02:38:18 AM] Sending request 'textDocument/semanticTokens/range - (47)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:38:18 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 47
}


[Trace - 02:38:18 AM] Sending request 'textDocument/semanticTokens/full - (48)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:18 AM] Received response 'textDocument/documentSymbol - (43)' in 3ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 2,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 6,
        "character": 4
      },
      "end": {
        "line": 6,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 7,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:38:18 AM] Received response 'textDocument/codeAction - (44)' in 3ms.
Result: []


[Trace - 02:38:18 AM] Received response 'textDocument/documentHighlight - (45)' in 3ms.
Result: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 13
      },
      "end": {
        "line": 2,
        "character": 19
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 2,
        "character": 23
      },
      "end": {
        "line": 2,
        "character": 29
      }
    },
    "kind": 1
  }
]


[Trace - 02:38:18 AM] Received response 'textDocument/hover - (46)' in 3ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 23
    },
    "end": {
      "line": 2,
      "character": 29
    }
  },
  "contents": {
    "value": "```lean\nString : Type\n```\n***\n`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n\n***\n*import Init.Prelude*",
    "kind": "markdown"
  }
}


[Trace - 02:38:18 AM] Received response 'textDocument/semanticTokens/full - (48)' in 4ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:18 AM] Received response 'nil - (47)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:27 AM] Sending request 'textDocument/codeAction - (49)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 28
    },
    "end": {
      "line": 2,
      "character": 28
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:27 AM] Received response 'textDocument/codeAction - (49)' in 1ms.
Result: []


[Trace - 02:38:28 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 19
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}


[Trace - 02:38:28 AM] Sending request 'textDocument/completion - (50)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 29
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 19,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 19,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinig : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 19,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 19,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinig : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 19,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 19,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinig : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 19,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinig : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 19,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:28 AM] Received response 'textDocument/completion - (50)' in 41ms.
Result: {
  "items": [
    {
      "label": "Strinig",
      "kind": 6,
      "detail": "Sort u_1"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "Classical.strongIndefiniteDescription",
      "kind": 3,
      "detail": "(p : α → Prop) → Nonempty α → { x // (∃ y, p y) → p x }"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "Nat.strongInductionOn",
      "kind": 3,
      "detail": "(n : Nat) → ((n : Nat) → ((m : Nat) → m < n → motive m) → motive n) → motive n"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "Nat.caseStrongInductionOn",
      "kind": 3,
      "detail": "(a : Nat) → motive 0 → ((n : Nat) → ((m : Nat) → m ≤ n → motive m) → motive (Nat.succ n)) → motive a"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:28 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 20
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 29
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:28 AM] Sending request 'textDocument/completion - (51)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 20,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 20,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 20,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 20,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 20,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 20,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:28 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 20,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:28 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 20,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:28 AM] Received response 'textDocument/completion - (51)' in 263ms.
Result: {
  "items": [
    {
      "label": "String",
      "kind": 22,
      "documentation": {
        "value": "`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "Substring",
      "kind": 22,
      "documentation": {
        "value": "A `Substring` is a view into some subslice of a `String`.\nThe actual string slicing is deferred because this would require copying the\nstring; here we only store a reference to the original string for\ngarbage collection purposes.\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "ToString",
      "kind": 7,
      "detail": "Type u → Type u"
    },
    {
      "label": "toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "instCoeStringError",
      "kind": 21,
      "detail": "Coe String IO.Error"
    },
    {
      "label": "instHashableString",
      "kind": 21,
      "detail": "Hashable String"
    },
    {
      "label": "instOrdString",
      "kind": 21,
      "detail": "Ord String"
    },
    {
      "label": "instReprString",
      "kind": 21,
      "detail": "Repr String"
    },
    {
      "label": "instToStringBool",
      "kind": 21,
      "detail": "ToString Bool"
    },
    {
      "label": "instToStringByteArray",
      "kind": 21,
      "detail": "ToString ByteArray"
    },
    {
      "label": "instToStringChar",
      "kind": 21,
      "detail": "ToString Char"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringExcept",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (Except ε α)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringFloat",
      "kind": 21,
      "detail": "ToString Float"
    },
    {
      "label": "instToStringFloatArray",
      "kind": 21,
      "detail": "ToString FloatArray"
    },
    {
      "label": "instToStringFormat",
      "kind": 21,
      "detail": "ToString Std.Format"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringNat",
      "kind": 21,
      "detail": "ToString Nat"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringPos",
      "kind": 21,
      "detail": "ToString String.Pos"
    },
    {
      "label": "instToStringProd",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α × β)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instToStringSubarray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subarray α)"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringSubtype",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subtype p)"
    },
    {
      "label": "instToStringSum",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α ⊕ β)"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instDecidableEqString",
      "kind": 3,
      "detail": "DecidableEq String"
    },
    {
      "label": "instReprAtomString",
      "kind": 21,
      "detail": "ReprAtom String"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "instHAddPosString",
      "kind": 21,
      "detail": "HAdd String.Pos String String.Pos"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "strictAnd",
      "kind": 3,
      "documentation": {
        "value": "`strictAnd` is the same as `and`, but it does not use short-circuit evaluation semantics:\nboth sides are evaluated, even if the first value is `false`.\n",
        "kind": "markdown"
      },
      "detail": "Bool → Bool → Bool"
    },
    {
      "label": "instStreamSubstringChar",
      "kind": 21,
      "detail": "Stream Substring Char"
    },
    {
      "label": "instInhabitedSubstring",
      "kind": 21,
      "detail": "Inhabited Substring"
    },
    {
      "label": "instReprSubstring",
      "kind": 21,
      "detail": "Repr Substring"
    },
    {
      "label": "Char.toString",
      "kind": 3,
      "detail": "Char → String"
    },
    {
      "label": "Float.toString",
      "kind": 3,
      "detail": "Float → String"
    },
    {
      "label": "Lean.versionString",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "Lean.versionStringCore",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "List.asString",
      "kind": 3,
      "detail": "List Char → String"
    },
    {
      "label": "List.toString",
      "kind": 3,
      "detail": "[inst : ToString α] → List α → String"
    },
    {
      "label": "Substring.toString",
      "kind": 3,
      "detail": "Substring → String"
    },
    {
      "label": "ToString.toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "Array.instToStringArray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Array α)"
    },
    {
      "label": "EStateM.instToStringResult",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (EStateM.Result ε σ α)"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "Nat.toSuperscriptString",
      "kind": 3,
      "detail": "Nat → String"
    },
    {
      "label": "String.instAppendString",
      "kind": 21,
      "detail": "Append String"
    },
    {
      "label": "String.instInhabitedString",
      "kind": 21,
      "detail": "Inhabited String"
    },
    {
      "label": "String.instLTString",
      "kind": 21,
      "detail": "LT String"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "Std.instToFormatString",
      "kind": 21,
      "detail": "Std.ToFormat String"
    },
    {
      "label": "Classical.strongIndefiniteDescription",
      "kind": 3,
      "detail": "(p : α → Prop) → Nonempty α → { x // (∃ y, p y) → p x }"
    },
    {
      "label": "IO.Error.toString",
      "kind": 3,
      "detail": "IO.Error → String"
    },
    {
      "label": "Lean.Name.toString",
      "kind": 3,
      "detail": "Lean.Name → optParam Bool true → String"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "Lean.TSyntax.getString",
      "kind": 3,
      "detail": "Lean.StrLit → String"
    },
    {
      "label": "String.Iterator.toString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "System.FilePath.toString",
      "kind": 5,
      "detail": "System.FilePath → String"
    },
    {
      "label": "System.SearchPath.toString",
      "kind": 3,
      "detail": "System.SearchPath → String"
    },
    {
      "label": "Lean.strLitKind",
      "kind": 21,
      "documentation": {
        "value": "`str` is the node kind of string literals like `\"foo\"`. ",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.strongInductionOn",
      "kind": 3,
      "detail": "(n : Nat) → ((n : Nat) → ((m : Nat) → m < n → motive m) → motive n) → motive n"
    },
    {
      "label": "IO.Error.instToStringError",
      "kind": 21,
      "detail": "ToString IO.Error"
    },
    {
      "label": "Lean.Name.instToStringName",
      "kind": 21,
      "detail": "ToString Lean.Name"
    },
    {
      "label": "Lean.Syntax.instToStringSyntax",
      "kind": 21,
      "detail": "ToString Lean.Syntax"
    },
    {
      "label": "Lean.Syntax.instToStringTSyntax",
      "kind": 3,
      "detail": "ToString (Lean.TSyntax k)"
    },
    {
      "label": "Std.Format.instCoeStringFormat",
      "kind": 21,
      "detail": "Coe String Std.Format"
    },
    {
      "label": "String.Iterator.remainingToString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "String.toSubstring",
      "kind": 3,
      "documentation": {
        "value": "Convert a `String` into a `Substring` denoting the entire string. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "IO.Error.fopenErrorToString",
      "kind": 3,
      "detail": "String → String → UInt32 → Option String → String"
    },
    {
      "label": "IO.Error.otherErrorToString",
      "kind": 3,
      "detail": "String → UInt32 → Option String → String"
    },
    {
      "label": "System.FilePath.instHDivFilePathString",
      "kind": 21,
      "detail": "HDiv System.FilePath String System.FilePath"
    },
    {
      "label": "Lean.instQuoteSubstringMkStr1",
      "kind": 21,
      "detail": "Lean.Quote Substring"
    },
    {
      "label": "Lean.interpolatedStrKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrKind` is the node kind of an interpolated string literal\nlike `\"value = {x}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Lean.interpolatedStrLitKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrLitKind` is the node kind of interpolated string literal\nfragments like `\"value = {` and `}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.caseStrongInductionOn",
      "kind": 3,
      "detail": "(a : Nat) → motive 0 → ((n : Nat) → ((m : Nat) → m ≤ n → motive m) → motive (Nat.succ n)) → motive a"
    },
    {
      "label": "String.toSubstring'",
      "kind": 3,
      "documentation": {
        "value": "`String.toSubstring` without `[inline]` annotation. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "ShareCommon.StateFactoryPointed",
      "kind": 21,
      "detail": "NonemptyType"
    },
    {
      "label": "Lean.Syntax.getSubstring?",
      "kind": 3,
      "documentation": {
        "value": "Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). ",
        "kind": "markdown"
      },
      "detail": "Lean.Syntax → optParam Bool true → optParam Bool true → Option Substring"
    },
    {
      "label": "Fin.instShiftRightFin",
      "kind": 3,
      "detail": "ShiftRight (Fin n)"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:29 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 21
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (52)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 29
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 52
}


[Trace - 02:38:29 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 22
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 29
        },
        "end": {
          "line": 2,
          "character": 29
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (53)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 30
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 53
}


[Trace - 02:38:29 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 23
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 30
        },
        "end": {
          "line": 2,
          "character": 30
        }
      },
      "rangeLength": 0,
      "text": "d"
    }
  ]
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (54)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 31
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 54
}


[Trace - 02:38:29 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 24
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 31
        },
        "end": {
          "line": 2,
          "character": 31
        }
      },
      "rangeLength": 0,
      "text": "s"
    }
  ]
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (55)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 32
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 55
}


[Trace - 02:38:29 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 25
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 32
        },
        "end": {
          "line": 2,
          "character": 32
        }
      },
      "rangeLength": 0,
      "text": "a"
    }
  ]
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (56)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 33
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Received response 'nil - (52)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:29 AM] Received response 'nil - (53)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:29 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 56
}


[Trace - 02:38:29 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 26
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 33
        },
        "end": {
          "line": 2,
          "character": 33
        }
      },
      "rangeLength": 0,
      "text": "d"
    }
  ]
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (57)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 34
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Received response 'nil - (54)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:29 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 57
}


[Trace - 02:38:29 AM] Sending request 'textDocument/completion - (58)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 35
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:38:29 AM] Received response 'nil - (55)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:29 AM] Received response 'nil - (56)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:29 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 26,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:29 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 26,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsadsadg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:29 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 26,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:29 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 26,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsadsadg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:29 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 26,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:29 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 26,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsadsadg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:29 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 26,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsadsadg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:29 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 26,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:29 AM] Received response 'textDocument/completion - (58)' in 144ms.
Result: {
  "items": [
    {
      "label": "Strinsadsadg",
      "kind": 6,
      "detail": "Sort u_1"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:30 AM] Sending request 'textDocument/completion - (59)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 34
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:30 AM] Received response 'textDocument/completion - (59)' in 23ms.
Result: {
  "items": [
    {
      "label": "Strinsadsadg",
      "kind": 6,
      "detail": "Sort u_1"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:30 AM] Sending request 'textDocument/completion - (60)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 33
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:30 AM] Received response 'textDocument/completion - (60)' in 23ms.
Result: {
  "items": [
    {
      "label": "Strinsadsadg",
      "kind": 6,
      "detail": "Sort u_1"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:32 AM] Sending request 'textDocument/documentSymbol - (61)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:32 AM] Sending request 'textDocument/codeAction - (62)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 4,
      "character": 14
    },
    "end": {
      "line": 4,
      "character": 14
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 1,
        "range": {
          "start": {
            "line": 4,
            "character": 9
          },
          "end": {
            "line": 4,
            "character": 15
          }
        },
        "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsadsadg : Sort ?u.9",
        "fullRange": {
          "start": {
            "line": 4,
            "character": 9
          },
          "end": {
            "line": 4,
            "character": 15
          }
        }
      }
    ]
  }
}


[Trace - 02:38:32 AM] Sending request 'textDocument/documentHighlight - (63)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 4,
    "character": 14
  }
}


[Trace - 02:38:32 AM] Sending request 'textDocument/semanticTokens/range - (64)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:38:32 AM] Sending request 'textDocument/hover - (65)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 4,
    "character": 14
  }
}


[Trace - 02:38:32 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 64
}


[Trace - 02:38:32 AM] Sending request 'textDocument/semanticTokens/full - (66)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:32 AM] Received response 'textDocument/documentHighlight - (63)' in 3ms.
Result: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 9
      },
      "end": {
        "line": 2,
        "character": 10
      }
    },
    "kind": 1
  },
  {
    "range": {
      "start": {
        "line": 4,
        "character": 14
      },
      "end": {
        "line": 4,
        "character": 15
      }
    },
    "kind": 1
  }
]


[Trace - 02:38:32 AM] Received response 'textDocument/documentSymbol - (61)' in 4ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 2,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 6,
        "character": 4
      },
      "end": {
        "line": 6,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 7,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:38:32 AM] Received response 'textDocument/hover - (65)' in 3ms.
Result: {
  "range": {
    "start": {
      "line": 4,
      "character": 14
    },
    "end": {
      "line": 4,
      "character": 15
    }
  },
  "contents": {
    "value": "```lean\ny : String\n```",
    "kind": "markdown"
  }
}


[Trace - 02:38:32 AM] Received response 'nil - (64)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    14,
    12,
    1,
    0,
    0,
    16,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:32 AM] Received response 'textDocument/codeAction - (62)' in 5ms.
Result: []


[Trace - 02:38:32 AM] Received response 'textDocument/semanticTokens/full - (66)' in 4ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    14,
    12,
    1,
    0,
    0,
    16,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:33 AM] Sending request '$/lean/plainGoal - (67)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 4,
    "character": 14
  }
}


[Trace - 02:38:33 AM] Sending request '$/lean/plainTermGoal - (68)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 4,
    "character": 14
  }
}


[Trace - 02:38:33 AM] Received response '$/lean/plainGoal - (67)' in 1ms.
Result: {
  "rendered": "no goals",
  "goals": []
}


[Trace - 02:38:33 AM] Received response '$/lean/plainTermGoal - (68)' in 23ms.
Result: {
  "range": {
    "start": {
      "line": 4,
      "character": 14
    },
    "end": {
      "line": 4,
      "character": 15
    }
  },
  "goal": "Strinsadsadg : Sort ?u.9\ny H : String\n⊢ String"
}


[Trace - 02:38:33 AM] Sending request 'textDocument/codeAction - (69)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 4,
      "character": 14
    },
    "end": {
      "line": 4,
      "character": 14
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 1,
        "range": {
          "start": {
            "line": 4,
            "character": 9
          },
          "end": {
            "line": 4,
            "character": 15
          }
        },
        "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsadsadg : Sort ?u.9",
        "fullRange": {
          "start": {
            "line": 4,
            "character": 9
          },
          "end": {
            "line": 4,
            "character": 15
          }
        }
      }
    ]
  }
}


[Trace - 02:38:33 AM] Sending request '$/lean/plainGoal - (70)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 4,
    "character": 14
  }
}


[Trace - 02:38:33 AM] Sending request '$/lean/plainTermGoal - (71)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 4,
    "character": 14
  }
}


[Trace - 02:38:33 AM] Received response 'textDocument/codeAction - (69)' in 2ms.
Result: []


[Trace - 02:38:33 AM] Received response '$/lean/plainGoal - (70)' in 2ms.
Result: {
  "rendered": "no goals",
  "goals": []
}


[Trace - 02:38:33 AM] Received response '$/lean/plainTermGoal - (71)' in 23ms.
Result: {
  "range": {
    "start": {
      "line": 4,
      "character": 14
    },
    "end": {
      "line": 4,
      "character": 15
    }
  },
  "goal": "Strinsadsadg : Sort ?u.9\ny H : String\n⊢ String"
}


[Trace - 02:38:35 AM] Sending request 'textDocument/codeAction - (72)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 14
    },
    "end": {
      "line": 2,
      "character": 14
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:35 AM] Sending request 'textDocument/documentHighlight - (73)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 14
  }
}


[Trace - 02:38:35 AM] Sending request 'textDocument/hover - (74)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 14
  }
}


[Trace - 02:38:35 AM] Received response 'textDocument/codeAction - (72)' in 2ms.
Result: []


[Trace - 02:38:35 AM] Received response 'textDocument/hover - (74)' in 23ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 13
    },
    "end": {
      "line": 2,
      "character": 19
    }
  },
  "contents": {
    "value": "```lean\nString : Type\n```\n***\n`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n\n***\n*import Init.Prelude*",
    "kind": "markdown"
  }
}


[Trace - 02:38:35 AM] Received response 'textDocument/documentHighlight - (73)' in 73ms.
Result: [
  {
    "range": {
      "start": {
        "line": 2,
        "character": 13
      },
      "end": {
        "line": 2,
        "character": 19
      }
    },
    "kind": 1
  }
]


[Trace - 02:38:37 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 27
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 34
        },
        "end": {
          "line": 2,
          "character": 35
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:37 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 28
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 33
        },
        "end": {
          "line": 2,
          "character": 34
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:37 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 29
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 32
        },
        "end": {
          "line": 2,
          "character": 33
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:37 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 30
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 31
        },
        "end": {
          "line": 2,
          "character": 32
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:37 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 31
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 30
        },
        "end": {
          "line": 2,
          "character": 31
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:37 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 32
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 29
        },
        "end": {
          "line": 2,
          "character": 30
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:38 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 33
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 29
        },
        "end": {
          "line": 2,
          "character": 29
        }
      },
      "rangeLength": 0,
      "text": "g"
    }
  ]
}


[Trace - 02:38:38 AM] Sending request 'textDocument/completion - (75)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 30
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:38 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 33,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:38 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 33,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:38 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 33,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:38 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 33,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:38 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 33,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:38 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 33,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:38 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 33,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      },
      "message": "type mismatch\n  H ++ y\nhas type\n  String : outParam Type\nbut is expected to have type\n  Strinsg : Sort ?u.9",
      "fullRange": {
        "start": {
          "line": 4,
          "character": 9
        },
        "end": {
          "line": 4,
          "character": 15
        }
      }
    }
  ]
}


[Trace - 02:38:38 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 33,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:38 AM] Received response 'textDocument/completion - (75)' in 35ms.
Result: {
  "items": [
    {
      "label": "Strinsg",
      "kind": 6,
      "detail": "Sort u_1"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:38 AM] Sending request 'textDocument/semanticTokens/full - (76)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:38 AM] Received response 'textDocument/semanticTokens/full - (76)' in 2ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    14,
    7,
    1,
    0,
    0,
    11,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:38 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 34
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 29
        },
        "end": {
          "line": 2,
          "character": 30
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:38 AM] Sending request 'textDocument/completion - (77)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 29
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:38 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 77
}


[Trace - 02:38:38 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 35
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 29
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 02:38:38 AM] Sending request 'textDocument/completion - (78)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 28
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:39 AM] Received response 'nil - (77)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:39 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 78
}


[Trace - 02:38:39 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 36
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 28
        },
        "end": {
          "line": 2,
          "character": 28
        }
      },
      "rangeLength": 0,
      "text": "g"
    }
  ]
}


[Trace - 02:38:39 AM] Sending request 'textDocument/completion - (79)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 29
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:39 AM] Received response 'nil - (78)' in 0ms.
Result: {
  "items": [
    {
      "label": "-"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:39 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 36,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:39 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 36,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:39 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 36,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 6,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:39 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 36,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:39 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 36,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 0
        },
        "end": {
          "line": 8,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:39 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 36,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:39 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 36,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:39 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 36,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:39 AM] Received response 'textDocument/completion - (79)' in 258ms.
Result: {
  "items": [
    {
      "label": "String",
      "kind": 22,
      "documentation": {
        "value": "`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "Substring",
      "kind": 22,
      "documentation": {
        "value": "A `Substring` is a view into some subslice of a `String`.\nThe actual string slicing is deferred because this would require copying the\nstring; here we only store a reference to the original string for\ngarbage collection purposes.\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "ToString",
      "kind": 7,
      "detail": "Type u → Type u"
    },
    {
      "label": "toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "instHashableString",
      "kind": 21,
      "detail": "Hashable String"
    },
    {
      "label": "instOrdString",
      "kind": 21,
      "detail": "Ord String"
    },
    {
      "label": "instReprString",
      "kind": 21,
      "detail": "Repr String"
    },
    {
      "label": "instDecidableEqString",
      "kind": 3,
      "detail": "DecidableEq String"
    },
    {
      "label": "instReprAtomString",
      "kind": 21,
      "detail": "ReprAtom String"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instCoeStringError",
      "kind": 21,
      "detail": "Coe String IO.Error"
    },
    {
      "label": "instHAddPosString",
      "kind": 21,
      "detail": "HAdd String.Pos String String.Pos"
    },
    {
      "label": "instToStringBool",
      "kind": 21,
      "detail": "ToString Bool"
    },
    {
      "label": "instToStringByteArray",
      "kind": 21,
      "detail": "ToString ByteArray"
    },
    {
      "label": "instToStringChar",
      "kind": 21,
      "detail": "ToString Char"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringExcept",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (Except ε α)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringFloat",
      "kind": 21,
      "detail": "ToString Float"
    },
    {
      "label": "instToStringFloatArray",
      "kind": 21,
      "detail": "ToString FloatArray"
    },
    {
      "label": "instToStringFormat",
      "kind": 21,
      "detail": "ToString Std.Format"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringNat",
      "kind": 21,
      "detail": "ToString Nat"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringPos",
      "kind": 21,
      "detail": "ToString String.Pos"
    },
    {
      "label": "instToStringProd",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α × β)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringSubarray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subarray α)"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringSubtype",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subtype p)"
    },
    {
      "label": "instToStringSum",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α ⊕ β)"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "instInhabitedSubstring",
      "kind": 21,
      "detail": "Inhabited Substring"
    },
    {
      "label": "instReprSubstring",
      "kind": 21,
      "detail": "Repr Substring"
    },
    {
      "label": "instStreamSubstringChar",
      "kind": 21,
      "detail": "Stream Substring Char"
    },
    {
      "label": "Char.toString",
      "kind": 3,
      "detail": "Char → String"
    },
    {
      "label": "Float.toString",
      "kind": 3,
      "detail": "Float → String"
    },
    {
      "label": "Lean.versionString",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "List.asString",
      "kind": 3,
      "detail": "List Char → String"
    },
    {
      "label": "List.toString",
      "kind": 3,
      "detail": "[inst : ToString α] → List α → String"
    },
    {
      "label": "Substring.toString",
      "kind": 3,
      "detail": "Substring → String"
    },
    {
      "label": "ToString.toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "Nat.toSuperscriptString",
      "kind": 3,
      "detail": "Nat → String"
    },
    {
      "label": "String.instAppendString",
      "kind": 21,
      "detail": "Append String"
    },
    {
      "label": "String.instInhabitedString",
      "kind": 21,
      "detail": "Inhabited String"
    },
    {
      "label": "String.instLTString",
      "kind": 21,
      "detail": "LT String"
    },
    {
      "label": "Lean.versionStringCore",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "Std.instToFormatString",
      "kind": 21,
      "detail": "Std.ToFormat String"
    },
    {
      "label": "Array.instToStringArray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Array α)"
    },
    {
      "label": "EStateM.instToStringResult",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (EStateM.Result ε σ α)"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "String.toSubstring",
      "kind": 3,
      "documentation": {
        "value": "Convert a `String` into a `Substring` denoting the entire string. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "IO.Error.toString",
      "kind": 3,
      "detail": "IO.Error → String"
    },
    {
      "label": "Lean.Name.toString",
      "kind": 3,
      "detail": "Lean.Name → optParam Bool true → String"
    },
    {
      "label": "Lean.TSyntax.getString",
      "kind": 3,
      "detail": "Lean.StrLit → String"
    },
    {
      "label": "String.Iterator.toString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "System.FilePath.toString",
      "kind": 5,
      "detail": "System.FilePath → String"
    },
    {
      "label": "System.SearchPath.toString",
      "kind": 3,
      "detail": "System.SearchPath → String"
    },
    {
      "label": "String.Iterator.remainingToString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "IO.Error.fopenErrorToString",
      "kind": 3,
      "detail": "String → String → UInt32 → Option String → String"
    },
    {
      "label": "IO.Error.otherErrorToString",
      "kind": 3,
      "detail": "String → UInt32 → Option String → String"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "IO.Error.instToStringError",
      "kind": 21,
      "detail": "ToString IO.Error"
    },
    {
      "label": "Lean.Name.instToStringName",
      "kind": 21,
      "detail": "ToString Lean.Name"
    },
    {
      "label": "Lean.Syntax.instToStringSyntax",
      "kind": 21,
      "detail": "ToString Lean.Syntax"
    },
    {
      "label": "Lean.Syntax.instToStringTSyntax",
      "kind": 3,
      "detail": "ToString (Lean.TSyntax k)"
    },
    {
      "label": "Std.Format.instCoeStringFormat",
      "kind": 21,
      "detail": "Coe String Std.Format"
    },
    {
      "label": "Lean.instQuoteSubstringMkStr1",
      "kind": 21,
      "detail": "Lean.Quote Substring"
    },
    {
      "label": "System.FilePath.instHDivFilePathString",
      "kind": 21,
      "detail": "HDiv System.FilePath String System.FilePath"
    },
    {
      "label": "String.toSubstring'",
      "kind": 3,
      "documentation": {
        "value": "`String.toSubstring` without `[inline]` annotation. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "Lean.Syntax.getSubstring?",
      "kind": 3,
      "documentation": {
        "value": "Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). ",
        "kind": "markdown"
      },
      "detail": "Lean.Syntax → optParam Bool true → optParam Bool true → Option Substring"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:40 AM] Sending request 'textDocument/documentSymbol - (80)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:40 AM] Sending request 'textDocument/codeAction - (81)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 1,
      "character": 0
    },
    "end": {
      "line": 1,
      "character": 0
    }
  },
  "context": {
    "diagnostics": []
  }
}


[Trace - 02:38:40 AM] Sending request 'textDocument/semanticTokens/range - (82)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 8,
      "character": 0
    }
  }
}


[Trace - 02:38:40 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 82
}


[Trace - 02:38:40 AM] Sending request 'textDocument/semanticTokens/full - (83)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:40 AM] Received response 'textDocument/codeAction - (81)' in 2ms.
Result: []


[Trace - 02:38:40 AM] Received response 'textDocument/documentSymbol - (80)' in 3ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 2,
        "character": 4
      },
      "end": {
        "line": 2,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 2,
        "character": 0
      },
      "end": {
        "line": 4,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 6,
        "character": 4
      },
      "end": {
        "line": 6,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 7,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:38:40 AM] Received response 'nil - (82)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:40 AM] Received response 'textDocument/semanticTokens/full - (83)' in 2ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:40 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 37
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "\n"
    }
  ]
}


[Trace - 02:38:40 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 37,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 3,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:40 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 37,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:40 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 37,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:40 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 37,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:40 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 37,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:40 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 37,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:40 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 37,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": []
}


[Trace - 02:38:40 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 37,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:40 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 38
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 0
        }
      },
      "rangeLength": 0,
      "text": "#"
    }
  ]
}


[Trace - 02:38:40 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 39
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 1
        },
        "end": {
          "line": 2,
          "character": 1
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 40
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 2
        },
        "end": {
          "line": 2,
          "character": 2
        }
      },
      "rangeLength": 0,
      "text": "h"
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 41
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 3
        },
        "end": {
          "line": 2,
          "character": 3
        }
      },
      "rangeLength": 0,
      "text": "e"
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 42
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 4
        },
        "end": {
          "line": 2,
          "character": 4
        }
      },
      "rangeLength": 0,
      "text": "c"
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 43
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 5
        },
        "end": {
          "line": 2,
          "character": 5
        }
      },
      "rangeLength": 0,
      "text": "k"
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 44
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 6
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "rangeLength": 0,
      "text": " "
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 45
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 7
        }
      },
      "rangeLength": 0,
      "text": "S"
    }
  ]
}


[Trace - 02:38:41 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 45,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:41 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 45,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "message": "unknown identifier 'S'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      }
    }
  ]
}


[Trace - 02:38:41 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 45,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 3,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:41 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 45,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "message": "unknown identifier 'S'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      }
    }
  ]
}


[Trace - 02:38:41 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 45,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:41 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 45,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "message": "unknown identifier 'S'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      }
    }
  ]
}


[Trace - 02:38:41 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 45,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:41 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 45,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "message": "unknown identifier 'S'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      }
    }
  ]
}


[Trace - 02:38:41 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 45,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "message": "unknown identifier 'S'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 8
        }
      }
    }
  ]
}


[Trace - 02:38:41 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 45,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 46
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 8
        },
        "end": {
          "line": 2,
          "character": 8
        }
      },
      "rangeLength": 0,
      "text": "t"
    }
  ]
}


[Trace - 02:38:41 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 47
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 9
        },
        "end": {
          "line": 2,
          "character": 9
        }
      },
      "rangeLength": 0,
      "text": "r"
    }
  ]
}


[Trace - 02:38:42 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 48
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 10
        },
        "end": {
          "line": 2,
          "character": 10
        }
      },
      "rangeLength": 0,
      "text": "i"
    }
  ]
}


[Trace - 02:38:42 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 49
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 11
        },
        "end": {
          "line": 2,
          "character": 11
        }
      },
      "rangeLength": 0,
      "text": "n"
    }
  ]
}


[Trace - 02:38:42 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 50
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 12
        },
        "end": {
          "line": 2,
          "character": 12
        }
      },
      "rangeLength": 0,
      "text": "g"
    }
  ]
}


[Trace - 02:38:42 AM] Sending request 'textDocument/completion - (84)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 13
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:42 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 50,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:42 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 50,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 3,
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "message": "String : Type",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      }
    }
  ]
}


[Trace - 02:38:42 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 50,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 3,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:42 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 50,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 3,
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "message": "String : Type",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      }
    }
  ]
}


[Trace - 02:38:42 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 50,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:42 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 50,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 3,
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "message": "String : Type",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      }
    }
  ]
}


[Trace - 02:38:42 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 50,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:38:42 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 50,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 3,
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "message": "String : Type",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      }
    }
  ]
}


[Trace - 02:38:42 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 50,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 3,
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      },
      "message": "String : Type",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 2,
          "character": 6
        }
      }
    }
  ]
}


[Trace - 02:38:42 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 50,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:38:42 AM] Received response 'textDocument/completion - (84)' in 65ms.
Result: {
  "items": [
    {
      "label": "String",
      "kind": 22,
      "documentation": {
        "value": "`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "ToString",
      "kind": 7,
      "detail": "Type u → Type u"
    },
    {
      "label": "toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "instHashableString",
      "kind": 21,
      "detail": "Hashable String"
    },
    {
      "label": "instOrdString",
      "kind": 21,
      "detail": "Ord String"
    },
    {
      "label": "instReprString",
      "kind": 21,
      "detail": "Repr String"
    },
    {
      "label": "instDecidableEqString",
      "kind": 3,
      "detail": "DecidableEq String"
    },
    {
      "label": "instReprAtomString",
      "kind": 21,
      "detail": "ReprAtom String"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instCoeStringError",
      "kind": 21,
      "detail": "Coe String IO.Error"
    },
    {
      "label": "instHAddPosString",
      "kind": 21,
      "detail": "HAdd String.Pos String String.Pos"
    },
    {
      "label": "instToStringBool",
      "kind": 21,
      "detail": "ToString Bool"
    },
    {
      "label": "instToStringByteArray",
      "kind": 21,
      "detail": "ToString ByteArray"
    },
    {
      "label": "instToStringChar",
      "kind": 21,
      "detail": "ToString Char"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringExcept",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (Except ε α)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringFloat",
      "kind": 21,
      "detail": "ToString Float"
    },
    {
      "label": "instToStringFloatArray",
      "kind": 21,
      "detail": "ToString FloatArray"
    },
    {
      "label": "instToStringFormat",
      "kind": 21,
      "detail": "ToString Std.Format"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringNat",
      "kind": 21,
      "detail": "ToString Nat"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringPos",
      "kind": 21,
      "detail": "ToString String.Pos"
    },
    {
      "label": "instToStringProd",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α × β)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringSubarray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subarray α)"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringSubtype",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subtype p)"
    },
    {
      "label": "instToStringSum",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α ⊕ β)"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "Substring",
      "kind": 22,
      "documentation": {
        "value": "A `Substring` is a view into some subslice of a `String`.\nThe actual string slicing is deferred because this would require copying the\nstring; here we only store a reference to the original string for\ngarbage collection purposes.\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "instInhabitedSubstring",
      "kind": 21,
      "detail": "Inhabited Substring"
    },
    {
      "label": "instReprSubstring",
      "kind": 21,
      "detail": "Repr Substring"
    },
    {
      "label": "instStreamSubstringChar",
      "kind": 21,
      "detail": "Stream Substring Char"
    },
    {
      "label": "Char.toString",
      "kind": 3,
      "detail": "Char → String"
    },
    {
      "label": "Float.toString",
      "kind": 3,
      "detail": "Float → String"
    },
    {
      "label": "Lean.versionString",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "List.asString",
      "kind": 3,
      "detail": "List Char → String"
    },
    {
      "label": "List.toString",
      "kind": 3,
      "detail": "[inst : ToString α] → List α → String"
    },
    {
      "label": "Substring.toString",
      "kind": 3,
      "detail": "Substring → String"
    },
    {
      "label": "ToString.toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "Nat.toSuperscriptString",
      "kind": 3,
      "detail": "Nat → String"
    },
    {
      "label": "String.instAppendString",
      "kind": 21,
      "detail": "Append String"
    },
    {
      "label": "String.instInhabitedString",
      "kind": 21,
      "detail": "Inhabited String"
    },
    {
      "label": "String.instLTString",
      "kind": 21,
      "detail": "LT String"
    },
    {
      "label": "Lean.versionStringCore",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "Std.instToFormatString",
      "kind": 21,
      "detail": "Std.ToFormat String"
    },
    {
      "label": "Array.instToStringArray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Array α)"
    },
    {
      "label": "EStateM.instToStringResult",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (EStateM.Result ε σ α)"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "String.toSubstring",
      "kind": 3,
      "documentation": {
        "value": "Convert a `String` into a `Substring` denoting the entire string. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "IO.Error.toString",
      "kind": 3,
      "detail": "IO.Error → String"
    },
    {
      "label": "Lean.Name.toString",
      "kind": 3,
      "detail": "Lean.Name → optParam Bool true → String"
    },
    {
      "label": "Lean.TSyntax.getString",
      "kind": 3,
      "detail": "Lean.StrLit → String"
    },
    {
      "label": "String.Iterator.toString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "System.FilePath.toString",
      "kind": 5,
      "detail": "System.FilePath → String"
    },
    {
      "label": "System.SearchPath.toString",
      "kind": 3,
      "detail": "System.SearchPath → String"
    },
    {
      "label": "String.Iterator.remainingToString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "IO.Error.fopenErrorToString",
      "kind": 3,
      "detail": "String → String → UInt32 → Option String → String"
    },
    {
      "label": "IO.Error.otherErrorToString",
      "kind": 3,
      "detail": "String → UInt32 → Option String → String"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "IO.Error.instToStringError",
      "kind": 21,
      "detail": "ToString IO.Error"
    },
    {
      "label": "Lean.Name.instToStringName",
      "kind": 21,
      "detail": "ToString Lean.Name"
    },
    {
      "label": "Lean.Syntax.instToStringSyntax",
      "kind": 21,
      "detail": "ToString Lean.Syntax"
    },
    {
      "label": "Lean.Syntax.instToStringTSyntax",
      "kind": 3,
      "detail": "ToString (Lean.TSyntax k)"
    },
    {
      "label": "Std.Format.instCoeStringFormat",
      "kind": 21,
      "detail": "Coe String Std.Format"
    },
    {
      "label": "Lean.instQuoteSubstringMkStr1",
      "kind": 21,
      "detail": "Lean.Quote Substring"
    },
    {
      "label": "System.FilePath.instHDivFilePathString",
      "kind": 21,
      "detail": "HDiv System.FilePath String System.FilePath"
    },
    {
      "label": "String.toSubstring'",
      "kind": 3,
      "documentation": {
        "value": "`String.toSubstring` without `[inline]` annotation. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "Lean.Syntax.getSubstring?",
      "kind": 3,
      "documentation": {
        "value": "Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). ",
        "kind": "markdown"
      },
      "detail": "Lean.Syntax → optParam Bool true → optParam Bool true → Option Substring"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:42 AM] Sending request 'textDocument/semanticTokens/full - (85)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:42 AM] Received response 'textDocument/semanticTokens/full - (85)' in 3ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    6,
    0,
    0,
    1,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:38:43 AM] Sending request 'textDocument/completion - (86)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 12
  },
  "context": {
    "triggerKind": 1
  }
}

(* AUTOCOMPLETE *)
[Trace - 02:38:43 AM] Received response 'textDocument/completion - (86)' in 46ms.
Result: {
  "items": [
    {
      "label": "String",
      "kind": 22,
      "documentation": {
        "value": "`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "ToString",
      "kind": 7,
      "detail": "Type u → Type u"
    },
    {
      "label": "toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "instCoeStringError",
      "kind": 21,
      "detail": "Coe String IO.Error"
    },
    {
      "label": "instHashableString",
      "kind": 21,
      "detail": "Hashable String"
    },
    {
      "label": "instOrdString",
      "kind": 21,
      "detail": "Ord String"
    },
    {
      "label": "instReprString",
      "kind": 21,
      "detail": "Repr String"
    },
    {
      "label": "instToStringBool",
      "kind": 21,
      "detail": "ToString Bool"
    },
    {
      "label": "instToStringByteArray",
      "kind": 21,
      "detail": "ToString ByteArray"
    },
    {
      "label": "instToStringChar",
      "kind": 21,
      "detail": "ToString Char"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringExcept",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (Except ε α)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringFloat",
      "kind": 21,
      "detail": "ToString Float"
    },
    {
      "label": "instToStringFloatArray",
      "kind": 21,
      "detail": "ToString FloatArray"
    },
    {
      "label": "instToStringFormat",
      "kind": 21,
      "detail": "ToString Std.Format"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringNat",
      "kind": 21,
      "detail": "ToString Nat"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringPos",
      "kind": 21,
      "detail": "ToString String.Pos"
    },
    {
      "label": "instToStringProd",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α × β)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instToStringSubarray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subarray α)"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringSubtype",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subtype p)"
    },
    {
      "label": "instToStringSum",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α ⊕ β)"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instDecidableEqString",
      "kind": 3,
      "detail": "DecidableEq String"
    },
    {
      "label": "instReprAtomString",
      "kind": 21,
      "detail": "ReprAtom String"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "instHAddPosString",
      "kind": 21,
      "detail": "HAdd String.Pos String String.Pos"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "Substring",
      "kind": 22,
      "documentation": {
        "value": "A `Substring` is a view into some subslice of a `String`.\nThe actual string slicing is deferred because this would require copying the\nstring; here we only store a reference to the original string for\ngarbage collection purposes.\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "strictAnd",
      "kind": 3,
      "documentation": {
        "value": "`strictAnd` is the same as `and`, but it does not use short-circuit evaluation semantics:\nboth sides are evaluated, even if the first value is `false`.\n",
        "kind": "markdown"
      },
      "detail": "Bool → Bool → Bool"
    },
    {
      "label": "instStreamSubstringChar",
      "kind": 21,
      "detail": "Stream Substring Char"
    },
    {
      "label": "instInhabitedSubstring",
      "kind": 21,
      "detail": "Inhabited Substring"
    },
    {
      "label": "instReprSubstring",
      "kind": 21,
      "detail": "Repr Substring"
    },
    {
      "label": "Char.toString",
      "kind": 3,
      "detail": "Char → String"
    },
    {
      "label": "Float.toString",
      "kind": 3,
      "detail": "Float → String"
    },
    {
      "label": "Lean.versionString",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "Lean.versionStringCore",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "List.asString",
      "kind": 3,
      "detail": "List Char → String"
    },
    {
      "label": "List.toString",
      "kind": 3,
      "detail": "[inst : ToString α] → List α → String"
    },
    {
      "label": "Substring.toString",
      "kind": 3,
      "detail": "Substring → String"
    },
    {
      "label": "ToString.toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "Array.instToStringArray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Array α)"
    },
    {
      "label": "EStateM.instToStringResult",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (EStateM.Result ε σ α)"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "Nat.toSuperscriptString",
      "kind": 3,
      "detail": "Nat → String"
    },
    {
      "label": "String.instAppendString",
      "kind": 21,
      "detail": "Append String"
    },
    {
      "label": "String.instInhabitedString",
      "kind": 21,
      "detail": "Inhabited String"
    },
    {
      "label": "String.instLTString",
      "kind": 21,
      "detail": "LT String"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "Std.instToFormatString",
      "kind": 21,
      "detail": "Std.ToFormat String"
    },
    {
      "label": "Classical.strongIndefiniteDescription",
      "kind": 3,
      "detail": "(p : α → Prop) → Nonempty α → { x // (∃ y, p y) → p x }"
    },
    {
      "label": "IO.Error.toString",
      "kind": 3,
      "detail": "IO.Error → String"
    },
    {
      "label": "Lean.Name.toString",
      "kind": 3,
      "detail": "Lean.Name → optParam Bool true → String"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "Lean.TSyntax.getString",
      "kind": 3,
      "detail": "Lean.StrLit → String"
    },
    {
      "label": "String.Iterator.toString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "System.FilePath.toString",
      "kind": 5,
      "detail": "System.FilePath → String"
    },
    {
      "label": "System.SearchPath.toString",
      "kind": 3,
      "detail": "System.SearchPath → String"
    },
    {
      "label": "Lean.strLitKind",
      "kind": 21,
      "documentation": {
        "value": "`str` is the node kind of string literals like `\"foo\"`. ",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.strongInductionOn",
      "kind": 3,
      "detail": "(n : Nat) → ((n : Nat) → ((m : Nat) → m < n → motive m) → motive n) → motive n"
    },
    {
      "label": "IO.Error.instToStringError",
      "kind": 21,
      "detail": "ToString IO.Error"
    },
    {
      "label": "Lean.Name.instToStringName",
      "kind": 21,
      "detail": "ToString Lean.Name"
    },
    {
      "label": "Lean.Syntax.instToStringSyntax",
      "kind": 21,
      "detail": "ToString Lean.Syntax"
    },
    {
      "label": "Lean.Syntax.instToStringTSyntax",
      "kind": 3,
      "detail": "ToString (Lean.TSyntax k)"
    },
    {
      "label": "Std.Format.instCoeStringFormat",
      "kind": 21,
      "detail": "Coe String Std.Format"
    },
    {
      "label": "String.Iterator.remainingToString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "String.toSubstring",
      "kind": 3,
      "documentation": {
        "value": "Convert a `String` into a `Substring` denoting the entire string. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "IO.Error.fopenErrorToString",
      "kind": 3,
      "detail": "String → String → UInt32 → Option String → String"
    },
    {
      "label": "IO.Error.otherErrorToString",
      "kind": 3,
      "detail": "String → UInt32 → Option String → String"
    },
    {
      "label": "System.FilePath.instHDivFilePathString",
      "kind": 21,
      "detail": "HDiv System.FilePath String System.FilePath"
    },
    {
      "label": "Lean.instQuoteSubstringMkStr1",
      "kind": 21,
      "detail": "Lean.Quote Substring"
    },
    {
      "label": "Lean.interpolatedStrKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrKind` is the node kind of an interpolated string literal\nlike `\"value = {x}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Lean.interpolatedStrLitKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrLitKind` is the node kind of interpolated string literal\nfragments like `\"value = {` and `}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.caseStrongInductionOn",
      "kind": 3,
      "detail": "(a : Nat) → motive 0 → ((n : Nat) → ((m : Nat) → m ≤ n → motive m) → motive (Nat.succ n)) → motive a"
    },
    {
      "label": "String.toSubstring'",
      "kind": 3,
      "documentation": {
        "value": "`String.toSubstring` without `[inline]` annotation. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "ShareCommon.StateFactoryPointed",
      "kind": 21,
      "detail": "NonemptyType"
    },
    {
      "label": "Lean.Syntax.getSubstring?",
      "kind": 3,
      "documentation": {
        "value": "Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). ",
        "kind": "markdown"
      },
      "detail": "Lean.Syntax → optParam Bool true → optParam Bool true → Option Substring"
    },
    {
      "label": "Fin.instShiftRightFin",
      "kind": 3,
      "detail": "ShiftRight (Fin n)"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:43 AM] Sending request 'textDocument/completion - (87)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 11
  },
  "context": {
    "triggerKind": 1
  }
}


[Trace - 02:38:43 AM] Received response 'textDocument/completion - (87)' in 52ms.
Result: {
  "items": [
    {
      "label": "String",
      "kind": 22,
      "documentation": {
        "value": "`String` is the type of (UTF-8 encoded) strings.\n\nThe compiler overrides the data representation of this type to a byte sequence,\nand both `String.utf8ByteSize` and `String.length` are cached and O(1).\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "strictAnd",
      "kind": 3,
      "documentation": {
        "value": "`strictAnd` is the same as `and`, but it does not use short-circuit evaluation semantics:\nboth sides are evaluated, even if the first value is `false`.\n",
        "kind": "markdown"
      },
      "detail": "Bool → Bool → Bool"
    },
    {
      "label": "strictOr",
      "kind": 3,
      "documentation": {
        "value": "`strictOr` is the same as `or`, but it does not use short-circuit evaluation semantics:\nboth sides are evaluated, even if the first value is `true`.\n",
        "kind": "markdown"
      },
      "detail": "Bool → Bool → Bool"
    },
    {
      "label": "ToString",
      "kind": 7,
      "detail": "Type u → Type u"
    },
    {
      "label": "toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "instCoeStringError",
      "kind": 21,
      "detail": "Coe String IO.Error"
    },
    {
      "label": "instHashableString",
      "kind": 21,
      "detail": "Hashable String"
    },
    {
      "label": "instOrdString",
      "kind": 21,
      "detail": "Ord String"
    },
    {
      "label": "instReprString",
      "kind": 21,
      "detail": "Repr String"
    },
    {
      "label": "instToStringBool",
      "kind": 21,
      "detail": "ToString Bool"
    },
    {
      "label": "instToStringByteArray",
      "kind": 21,
      "detail": "ToString ByteArray"
    },
    {
      "label": "instToStringChar",
      "kind": 21,
      "detail": "ToString Char"
    },
    {
      "label": "instToStringDecidable",
      "kind": 3,
      "detail": "ToString (Decidable p)"
    },
    {
      "label": "instToStringExcept",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (Except ε α)"
    },
    {
      "label": "instToStringFin",
      "kind": 3,
      "detail": "(n : Nat) → ToString (Fin n)"
    },
    {
      "label": "instToStringFloat",
      "kind": 21,
      "detail": "ToString Float"
    },
    {
      "label": "instToStringFloatArray",
      "kind": 21,
      "detail": "ToString FloatArray"
    },
    {
      "label": "instToStringFormat",
      "kind": 21,
      "detail": "ToString Std.Format"
    },
    {
      "label": "instToStringId",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Id α)"
    },
    {
      "label": "instToStringIdType",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (id α)"
    },
    {
      "label": "instToStringInt",
      "kind": 21,
      "detail": "ToString Int"
    },
    {
      "label": "instToStringIterator",
      "kind": 21,
      "detail": "ToString String.Iterator"
    },
    {
      "label": "instToStringList",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (List α)"
    },
    {
      "label": "instToStringNat",
      "kind": 21,
      "detail": "ToString Nat"
    },
    {
      "label": "instToStringOption",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Option α)"
    },
    {
      "label": "instToStringPUnit",
      "kind": 21,
      "detail": "ToString PUnit"
    },
    {
      "label": "instToStringPos",
      "kind": 21,
      "detail": "ToString String.Pos"
    },
    {
      "label": "instToStringProd",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α × β)"
    },
    {
      "label": "instToStringSigma",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : (x : α) → ToString (β x)] → ToString (Sigma β)"
    },
    {
      "label": "instToStringString",
      "kind": 21,
      "detail": "ToString String"
    },
    {
      "label": "instToStringSubarray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subarray α)"
    },
    {
      "label": "instToStringSubstring",
      "kind": 21,
      "detail": "ToString Substring"
    },
    {
      "label": "instToStringSubtype",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Subtype p)"
    },
    {
      "label": "instToStringSum",
      "kind": 3,
      "detail": "[inst : ToString α] → [inst : ToString β] → ToString (α ⊕ β)"
    },
    {
      "label": "instToStringUInt16",
      "kind": 21,
      "detail": "ToString UInt16"
    },
    {
      "label": "instToStringUInt32",
      "kind": 21,
      "detail": "ToString UInt32"
    },
    {
      "label": "instToStringUInt64",
      "kind": 21,
      "detail": "ToString UInt64"
    },
    {
      "label": "instToStringUInt8",
      "kind": 21,
      "detail": "ToString UInt8"
    },
    {
      "label": "instToStringULift",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (ULift α)"
    },
    {
      "label": "instToStringUSize",
      "kind": 21,
      "detail": "ToString USize"
    },
    {
      "label": "instToStringUnit",
      "kind": 21,
      "detail": "ToString Unit"
    },
    {
      "label": "instDecidableEqString",
      "kind": 3,
      "detail": "DecidableEq String"
    },
    {
      "label": "instReprAtomString",
      "kind": 21,
      "detail": "ReprAtom String"
    },
    {
      "label": "instToStreamStringSubstring",
      "kind": 21,
      "detail": "ToStream String Substring"
    },
    {
      "label": "Substring",
      "kind": 22,
      "documentation": {
        "value": "A `Substring` is a view into some subslice of a `String`.\nThe actual string slicing is deferred because this would require copying the\nstring; here we only store a reference to the original string for\ngarbage collection purposes.\n",
        "kind": "markdown"
      },
      "detail": "Type"
    },
    {
      "label": "instHAddPosString",
      "kind": 21,
      "detail": "HAdd String.Pos String String.Pos"
    },
    {
      "label": "instLawfulBEqStringInstBEqInstDecidableEqString",
      "kind": 21,
      "detail": "LawfulBEq String"
    },
    {
      "label": "ShiftRight",
      "kind": 7,
      "documentation": {
        "value": "The homogeneous version of `HShiftRight`: `a >>> b : α` where `a b : α`. ",
        "kind": "markdown"
      },
      "detail": "Type u → Type u"
    },
    {
      "label": "Char.toString",
      "kind": 3,
      "detail": "Char → String"
    },
    {
      "label": "Float.toString",
      "kind": 3,
      "detail": "Float → String"
    },
    {
      "label": "Lean.versionString",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "Lean.versionStringCore",
      "kind": 21,
      "detail": "String"
    },
    {
      "label": "List.asString",
      "kind": 3,
      "detail": "List Char → String"
    },
    {
      "label": "List.toString",
      "kind": 3,
      "detail": "[inst : ToString α] → List α → String"
    },
    {
      "label": "Substring.toString",
      "kind": 3,
      "detail": "Substring → String"
    },
    {
      "label": "ToString.toString",
      "kind": 5,
      "detail": "[self : ToString α] → α → String"
    },
    {
      "label": "Array.instToStringArray",
      "kind": 3,
      "detail": "[inst : ToString α] → ToString (Array α)"
    },
    {
      "label": "EStateM.instToStringResult",
      "kind": 3,
      "detail": "[inst : ToString ε] → [inst : ToString α] → ToString (EStateM.Result ε σ α)"
    },
    {
      "label": "Lean.instQuoteStringStrLitKind",
      "kind": 21,
      "detail": "Lean.Quote String Lean.strLitKind"
    },
    {
      "label": "Nat.toSuperscriptString",
      "kind": 3,
      "detail": "Nat → String"
    },
    {
      "label": "String.instAppendString",
      "kind": 21,
      "detail": "Append String"
    },
    {
      "label": "String.instInhabitedString",
      "kind": 21,
      "detail": "Inhabited String"
    },
    {
      "label": "String.instLTString",
      "kind": 21,
      "detail": "LT String"
    },
    {
      "label": "System.instCoeStringFilePath",
      "kind": 21,
      "detail": "Coe String System.FilePath"
    },
    {
      "label": "System.instToStringFilePath",
      "kind": 21,
      "detail": "ToString System.FilePath"
    },
    {
      "label": "HShiftRight",
      "kind": 7,
      "documentation": {
        "value": "The typeclass behind the notation `a >>> b : γ` where `a : α`, `b : β`. ",
        "kind": "markdown"
      },
      "detail": "Type u → Type v → outParam (Type w) → Type (max (max u v) w)"
    },
    {
      "label": "Std.instToFormatString",
      "kind": 21,
      "detail": "Std.ToFormat String"
    },
    {
      "label": "instShiftRightUInt16",
      "kind": 21,
      "detail": "ShiftRight UInt16"
    },
    {
      "label": "instShiftRightUInt32",
      "kind": 21,
      "detail": "ShiftRight UInt32"
    },
    {
      "label": "instShiftRightUInt64",
      "kind": 21,
      "detail": "ShiftRight UInt64"
    },
    {
      "label": "instShiftRightUInt8",
      "kind": 21,
      "detail": "ShiftRight UInt8"
    },
    {
      "label": "instShiftRightUSize",
      "kind": 21,
      "detail": "ShiftRight USize"
    },
    {
      "label": "instStreamList",
      "kind": 3,
      "detail": "Stream (List α) α"
    },
    {
      "label": "instStreamSubstringChar",
      "kind": 21,
      "detail": "Stream Substring Char"
    },
    {
      "label": "Classical.strongIndefiniteDescription",
      "kind": 3,
      "detail": "(p : α → Prop) → Nonempty α → { x // (∃ y, p y) → p x }"
    },
    {
      "label": "Fin.shiftRight",
      "kind": 3,
      "detail": "Fin n → Fin n → Fin n"
    },
    {
      "label": "Lean.strLitKind",
      "kind": 21,
      "documentation": {
        "value": "`str` is the node kind of string literals like `\"foo\"`. ",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.shiftRight",
      "kind": 3,
      "detail": "Nat → Nat → Nat"
    },
    {
      "label": "Nat.strongInductionOn",
      "kind": 3,
      "detail": "(n : Nat) → ((n : Nat) → ((m : Nat) → m < n → motive m) → motive n) → motive n"
    },
    {
      "label": "ShiftRight.shiftRight",
      "kind": 5,
      "documentation": {
        "value": "The implementation of `a >>> b : α`. See `HShiftRight`. ",
        "kind": "markdown"
      },
      "detail": "[self : ShiftRight α] → α → α → α"
    },
    {
      "label": "UInt16.shiftRight",
      "kind": 3,
      "detail": "UInt16 → UInt16 → UInt16"
    },
    {
      "label": "UInt32.shiftRight",
      "kind": 3,
      "detail": "UInt32 → UInt32 → UInt32"
    },
    {
      "label": "UInt64.shiftRight",
      "kind": 3,
      "detail": "UInt64 → UInt64 → UInt64"
    },
    {
      "label": "UInt8.shiftRight",
      "kind": 3,
      "detail": "UInt8 → UInt8 → UInt8"
    },
    {
      "label": "USize.shiftRight",
      "kind": 3,
      "detail": "USize → USize → USize"
    },
    {
      "label": "instInhabitedSubstring",
      "kind": 21,
      "detail": "Inhabited Substring"
    },
    {
      "label": "instReprSubstring",
      "kind": 21,
      "detail": "Repr Substring"
    },
    {
      "label": "IO.Error.toString",
      "kind": 3,
      "detail": "IO.Error → String"
    },
    {
      "label": "Lean.Name.toString",
      "kind": 3,
      "detail": "Lean.Name → optParam Bool true → String"
    },
    {
      "label": "Lean.Name.toStringWithSep",
      "kind": 3,
      "detail": "String → Bool → Lean.Name → String"
    },
    {
      "label": "Lean.TSyntax.getString",
      "kind": 3,
      "detail": "Lean.StrLit → String"
    },
    {
      "label": "String.Iterator.toString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "System.FilePath.toString",
      "kind": 5,
      "detail": "System.FilePath → String"
    },
    {
      "label": "System.SearchPath.toString",
      "kind": 3,
      "detail": "System.SearchPath → String"
    },
    {
      "label": "Nat.mul_sub_left_distrib",
      "kind": 3,
      "detail": "∀ (n m k : Nat), n * (m - k) = n * m - n * k"
    },
    {
      "label": "Nat.mul_sub_right_distrib",
      "kind": 3,
      "detail": "∀ (n m k : Nat), (n - m) * k = n * k - m * k"
    },
    {
      "label": "instHShiftRight",
      "kind": 3,
      "detail": "[inst : ShiftRight α] → HShiftRight α α α"
    },
    {
      "label": "instToStreamList",
      "kind": 3,
      "detail": "ToStream (List α) (List α)"
    },
    {
      "label": "IO.Error.instToStringError",
      "kind": 21,
      "detail": "ToString IO.Error"
    },
    {
      "label": "Lean.Name.instToStringName",
      "kind": 21,
      "detail": "ToString Lean.Name"
    },
    {
      "label": "Lean.Syntax.instToStringSyntax",
      "kind": 21,
      "detail": "ToString Lean.Syntax"
    },
    {
      "label": "Lean.Syntax.instToStringTSyntax",
      "kind": 3,
      "detail": "ToString (Lean.TSyntax k)"
    },
    {
      "label": "Std.Format.instCoeStringFormat",
      "kind": 21,
      "detail": "Coe String Std.Format"
    },
    {
      "label": "String.Iterator.remainingToString",
      "kind": 3,
      "detail": "String.Iterator → String"
    },
    {
      "label": "IO.Error.fopenErrorToString",
      "kind": 3,
      "detail": "String → String → UInt32 → Option String → String"
    },
    {
      "label": "IO.Error.otherErrorToString",
      "kind": 3,
      "detail": "String → UInt32 → Option String → String"
    },
    {
      "label": "Lean.Syntax.StrLit",
      "kind": 21,
      "detail": "Type"
    },
    {
      "label": "String.toSubstring",
      "kind": 3,
      "documentation": {
        "value": "Convert a `String` into a `Substring` denoting the entire string. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "System.FilePath.instHDivFilePathString",
      "kind": 21,
      "detail": "HDiv System.FilePath String System.FilePath"
    },
    {
      "label": "Fin.instShiftRightFin",
      "kind": 3,
      "detail": "ShiftRight (Fin n)"
    },
    {
      "label": "HShiftRight.hShiftRight",
      "kind": 5,
      "documentation": {
        "value": "`a >>> b` computes `a` shifted to the right by `b` places.\nThe meaning of this notation is type-dependent.\n* On `Nat` and fixed width unsigned types like `UInt8`,\n  this is equivalent to `a / 2 ^ b`. ",
        "kind": "markdown"
      },
      "detail": "[self : HShiftRight α β γ] → α → β → γ"
    },
    {
      "label": "Lean.interpolatedStrKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrKind` is the node kind of an interpolated string literal\nlike `\"value = {x}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Lean.interpolatedStrLitKind",
      "kind": 21,
      "documentation": {
        "value": "`interpolatedStrLitKind` is the node kind of interpolated string literal\nfragments like `\"value = {` and `}\"` in `s!\"value = {x}\"`.\n",
        "kind": "markdown"
      },
      "detail": "Lean.SyntaxNodeKind"
    },
    {
      "label": "Nat.caseStrongInductionOn",
      "kind": 3,
      "detail": "(a : Nat) → motive 0 → ((n : Nat) → ((m : Nat) → m ≤ n → motive m) → motive (Nat.succ n)) → motive a"
    },
    {
      "label": "Nat.instShiftRightNat",
      "kind": 21,
      "detail": "ShiftRight Nat"
    },
    {
      "label": "Lean.instQuoteSubstringMkStr1",
      "kind": 21,
      "detail": "Lean.Quote Substring"
    },
    {
      "label": "String.startsWith",
      "kind": 3,
      "detail": "String → String → Bool"
    },
    {
      "label": "String.toSubstring'",
      "kind": 3,
      "documentation": {
        "value": "`String.toSubstring` without `[inline]` annotation. ",
        "kind": "markdown"
      },
      "detail": "String → Substring"
    },
    {
      "label": "Lean.Syntax.decodeStrLit",
      "kind": 3,
      "detail": "String → Option String"
    },
    {
      "label": "Lean.Syntax.decodeStrLitAux",
      "kind": 3,
      "detail": "String → String.Pos → String → Option String"
    },
    {
      "label": "Lean.Syntax.mkStrLit",
      "kind": 3,
      "detail": "String → optParam Lean.SourceInfo Lean.SourceInfo.none → Lean.StrLit"
    },
    {
      "label": "IO.setAccessRights",
      "kind": 3,
      "detail": "System.FilePath → IO.FileRight → IO Unit"
    },
    {
      "label": "ShareCommon.StateFactoryBuilder",
      "kind": 22,
      "detail": "Type 1"
    },
    {
      "label": "ShareCommon.StateFactoryPointed",
      "kind": 21,
      "detail": "NonemptyType"
    },
    {
      "label": "Lean.Syntax.getSubstring?",
      "kind": 3,
      "documentation": {
        "value": "Return substring of original input covering `stx`.\nResult is meaningful only if all involved `SourceInfo.original`s refer to the same string (as is the case after parsing). ",
        "kind": "markdown"
      },
      "detail": "Lean.Syntax → optParam Bool true → optParam Bool true → Option Substring"
    },
    {
      "label": "Lean.TSyntax.instCoeStrLitTerm",
      "kind": 21,
      "detail": "Coe Lean.StrLit Lean.Term"
    },
    {
      "label": "ShareCommon.StateFactoryImpl",
      "kind": 22,
      "detail": "Type 1"
    },
    {
      "label": "IO.Prim.setAccessRights",
      "kind": 3,
      "detail": "System.FilePath → UInt32 → IO Unit"
    },
    {
      "label": "Lean.Syntax.isStrLit?",
      "kind": 3,
      "detail": "Lean.Syntax → Option String"
    }
  ],
  "isIncomplete": true
}


[Trace - 02:38:43 AM] Sending request 'textDocument/documentSymbol - (88)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:38:43 AM] Sending request 'textDocument/codeAction - (89)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 0
    },
    "end": {
      "line": 2,
      "character": 0
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 3,
        "range": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        },
        "message": "String : Type",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        }
      }
    ]
  }
}


[Trace - 02:38:43 AM] Sending request 'textDocument/documentHighlight - (90)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 0
  }
}


[Trace - 02:38:43 AM] Sending request 'textDocument/hover - (91)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 0
  }
}


[Trace - 02:38:43 AM] Received response 'textDocument/codeAction - (89)' in 3ms.
Result: []


[Trace - 02:38:43 AM] Received response 'textDocument/hover - (91)' in 2ms.
Result: null


[Trace - 02:38:43 AM] Received response 'textDocument/documentHighlight - (90)' in 3ms.
Result: []


[Trace - 02:38:43 AM] Received response 'textDocument/documentSymbol - (88)' in 3ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 3,
        "character": 4
      },
      "end": {
        "line": 3,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 3,
        "character": 0
      },
      "end": {
        "line": 5,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 7,
        "character": 4
      },
      "end": {
        "line": 7,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 7,
        "character": 0
      },
      "end": {
        "line": 8,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:38:44 AM] Sending request 'textDocument/codeAction - (92)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 2
    },
    "end": {
      "line": 2,
      "character": 2
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 3,
        "range": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        },
        "message": "String : Type",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        }
      }
    ]
  }
}


[Trace - 02:38:44 AM] Sending request 'textDocument/documentHighlight - (93)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:44 AM] Sending request 'textDocument/hover - (94)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:44 AM] Received response 'textDocument/hover - (94)' in 1ms.
Result: null


[Trace - 02:38:44 AM] Received response 'textDocument/codeAction - (92)' in 23ms.
Result: []


[Trace - 02:38:44 AM] Received response 'textDocument/documentHighlight - (93)' in 23ms.
Result: []


[Trace - 02:38:47 AM] Sending request '$/lean/plainGoal - (95)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 13
  }
}


[Trace - 02:38:47 AM] Sending request '$/lean/plainTermGoal - (96)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 13
  }
}


[Trace - 02:38:47 AM] Received response '$/lean/plainGoal - (95)' in 1ms.
Result: null


[Trace - 02:38:47 AM] Received response '$/lean/plainTermGoal - (96)' in 1ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 7
    },
    "end": {
      "line": 2,
      "character": 13
    }
  },
  "goal": "⊢ Type"
}


[Trace - 02:38:47 AM] Sending request 'textDocument/codeAction - (97)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 13
    },
    "end": {
      "line": 2,
      "character": 13
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 3,
        "range": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        },
        "message": "String : Type",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        }
      }
    ]
  }
}


[Trace - 02:38:47 AM] Sending request '$/lean/plainGoal - (98)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 13
  }
}


[Trace - 02:38:47 AM] Sending request '$/lean/plainTermGoal - (99)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 13
  }
}


[Trace - 02:38:47 AM] Received response 'textDocument/codeAction - (97)' in 1ms.
Result: []


[Trace - 02:38:47 AM] Received response '$/lean/plainTermGoal - (99)' in 23ms.
Result: {
  "range": {
    "start": {
      "line": 2,
      "character": 7
    },
    "end": {
      "line": 2,
      "character": 13
    }
  },
  "goal": "⊢ Type"
}


[Trace - 02:38:47 AM] Received response '$/lean/plainGoal - (98)' in 23ms.
Result: null


[Trace - 02:38:49 AM] Sending request 'textDocument/codeAction - (100)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 2
    },
    "end": {
      "line": 2,
      "character": 2
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 3,
        "range": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        },
        "message": "String : Type",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        }
      }
    ]
  }
}


[Trace - 02:38:49 AM] Sending request 'textDocument/documentHighlight - (101)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:49 AM] Sending request '$/lean/plainGoal - (102)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:49 AM] Sending request '$/lean/plainTermGoal - (103)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:49 AM] Sending request 'textDocument/hover - (104)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:49 AM] Received response '$/lean/plainGoal - (102)' in 1ms.
Result: null


[Trace - 02:38:49 AM] Received response '$/lean/plainTermGoal - (103)' in 1ms.
Result: null


[Trace - 02:38:49 AM] Received response 'textDocument/codeAction - (100)' in 2ms.
Result: []


[Trace - 02:38:49 AM] Received response 'textDocument/hover - (104)' in 1ms.
Result: null


[Trace - 02:38:49 AM] Received response 'textDocument/documentHighlight - (101)' in 23ms.
Result: []


[Trace - 02:38:50 AM] Sending request 'textDocument/codeAction - (105)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 2
    },
    "end": {
      "line": 2,
      "character": 2
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 3,
        "range": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        },
        "message": "String : Type",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        }
      }
    ]
  }
}


[Trace - 02:38:50 AM] Sending request 'textDocument/documentHighlight - (106)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:38:50 AM] Received response 'textDocument/codeAction - (105)' in 1ms.
Result: []


[Trace - 02:38:50 AM] Received response 'textDocument/documentHighlight - (106)' in 22ms.
Result: []


[Trace - 02:39:25 AM] Sending request 'textDocument/codeAction - (107)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 2
    },
    "end": {
      "line": 2,
      "character": 2
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 3,
        "range": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        },
        "message": "String : Type",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 0
          },
          "end": {
            "line": 2,
            "character": 6
          }
        }
      }
    ]
  }
}


[Trace - 02:39:25 AM] Sending request 'textDocument/documentHighlight - (108)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 2
  }
}


[Trace - 02:39:25 AM] Received response 'textDocument/codeAction - (107)' in 1ms.
Result: []


[Trace - 02:39:25 AM] Received response 'textDocument/documentHighlight - (108)' in 23ms.
Result: []


[Trace - 02:39:26 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 51
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 13
        },
        "end": {
          "line": 2,
          "character": 13
        }
      },
      "rangeLength": 0,
      "text": "x"
    }
  ]
}


[Trace - 02:39:26 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 52
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 14
        },
        "end": {
          "line": 2,
          "character": 14
        }
      },
      "rangeLength": 0,
      "text": "x"
    }
  ]
}


[Trace - 02:39:26 AM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
    "version": 53
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 15
        },
        "end": {
          "line": 2,
          "character": 15
        }
      },
      "rangeLength": 0,
      "text": "x"
    }
  ]
}


[Trace - 02:39:26 AM] Sending request 'textDocument/completion - (109)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 16
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:39:26 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 53,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 2,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:39:26 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 53,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      },
      "message": "unknown identifier 'Stringxxx'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      }
    }
  ]
}


[Trace - 02:39:26 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 53,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 3,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:39:26 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 53,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      },
      "message": "unknown identifier 'Stringxxx'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      }
    }
  ]
}


[Trace - 02:39:26 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 53,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:39:26 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 53,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      },
      "message": "unknown identifier 'Stringxxx'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      }
    }
  ]
}


[Trace - 02:39:26 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 53,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": [
    {
      "range": {
        "start": {
          "line": 9,
          "character": 0
        },
        "end": {
          "line": 9,
          "character": 0
        }
      },
      "kind": 1
    }
  ]
}


[Trace - 02:39:26 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 53,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      },
      "message": "unknown identifier 'Stringxxx'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      }
    }
  ]
}


(* ERROR HERE *)
[Trace - 02:39:26 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
  "version": 53,
  "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean",
  "diagnostics": [
    {
      "source": "Lean 4",
      "severity": 1,
      "range": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      },
      "message": "unknown identifier 'Stringxxx'",
      "fullRange": {
        "start": {
          "line": 2,
          "character": 7
        },
        "end": {
          "line": 2,
          "character": 16
        }
      }
    }
  ]
}


[Trace - 02:39:26 AM] Received notification '$/lean/fileProgress'.
Params: {
  "textDocument": {
    "version": 53,
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "processing": []
}


[Trace - 02:39:26 AM] Received response 'textDocument/completion - (109)' in 28ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:39:26 AM] Sending request 'textDocument/completion - (110)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 16
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:39:26 AM] Received response 'textDocument/completion - (110)' in 20ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:39:26 AM] Sending request 'textDocument/completion - (111)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 16
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:39:26 AM] Received response 'textDocument/completion - (111)' in 24ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:39:26 AM] Sending request 'textDocument/completion - (112)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 16
  },
  "context": {
    "triggerKind": 3
  }
}


[Trace - 02:39:26 AM] Received response 'textDocument/completion - (112)' in 23ms.
Result: {
  "items": [],
  "isIncomplete": true
}


[Trace - 02:39:27 AM] Sending request 'textDocument/documentSymbol - (113)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:39:27 AM] Sending request 'textDocument/codeAction - (114)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 16
    },
    "end": {
      "line": 2,
      "character": 16
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 1,
        "range": {
          "start": {
            "line": 2,
            "character": 7
          },
          "end": {
            "line": 2,
            "character": 16
          }
        },
        "message": "unknown identifier 'Stringxxx'",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 7
          },
          "end": {
            "line": 2,
            "character": 16
          }
        }
      }
    ]
  }
}


[Trace - 02:39:27 AM] Sending request 'textDocument/semanticTokens/range - (115)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 0,
      "character": 0
    },
    "end": {
      "line": 9,
      "character": 0
    }
  }
}


[Trace - 02:39:27 AM] Sending notification '$/cancelRequest'.
Params: {
  "id": 115
}


[Trace - 02:39:27 AM] Sending request 'textDocument/semanticTokens/full - (116)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  }
}


[Trace - 02:39:27 AM] Received response 'textDocument/codeAction - (114)' in 3ms.
Result: []


[Trace - 02:39:27 AM] Received response 'textDocument/documentSymbol - (113)' in 3ms.
Result: [
  {
    "selectionRange": {
      "start": {
        "line": 3,
        "character": 4
      },
      "end": {
        "line": 3,
        "character": 7
      }
    },
    "range": {
      "start": {
        "line": 3,
        "character": 0
      },
      "end": {
        "line": 5,
        "character": 16
      }
    },
    "name": "foo",
    "kind": 6
  },
  {
    "selectionRange": {
      "start": {
        "line": 7,
        "character": 4
      },
      "end": {
        "line": 7,
        "character": 8
      }
    },
    "range": {
      "start": {
        "line": 7,
        "character": 0
      },
      "end": {
        "line": 8,
        "character": 32
      }
    },
    "name": "main",
    "kind": 6
  }
]


[Trace - 02:39:27 AM] Received response 'textDocument/semanticTokens/full - (116)' in 2ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    6,
    0,
    0,
    1,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:39:27 AM] Received response 'nil - (115)' in 0ms.
Result: {
  "data": [
    0,
    0,
    6,
    0,
    0,
    2,
    0,
    6,
    0,
    0,
    1,
    0,
    3,
    0,
    0,
    0,
    4,
    3,
    3,
    0,
    0,
    5,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    24,
    2,
    0,
    0,
    1,
    2,
    4,
    0,
    0,
    0,
    5,
    1,
    1,
    0,
    1,
    2,
    5,
    0,
    0,
    0,
    7,
    1,
    1,
    0,
    0,
    5,
    1,
    1,
    0,
    2,
    0,
    3,
    0,
    0,
    0,
    4,
    4,
    3,
    0,
    1,
    13,
    2,
    0,
    0
  ]
}


[Trace - 02:39:27 AM] Sending request 'textDocument/hover - (117)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 15
  }
}


[Trace - 02:39:27 AM] Sending request 'textDocument/codeAction - (118)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "range": {
    "start": {
      "line": 2,
      "character": 15
    },
    "end": {
      "line": 2,
      "character": 15
    }
  },
  "context": {
    "diagnostics": [
      {
        "source": "Lean 4",
        "severity": 1,
        "range": {
          "start": {
            "line": 2,
            "character": 7
          },
          "end": {
            "line": 2,
            "character": 16
          }
        },
        "message": "unknown identifier 'Stringxxx'",
        "fullRange": {
          "start": {
            "line": 2,
            "character": 7
          },
          "end": {
            "line": 2,
            "character": 16
          }
        }
      }
    ]
  }
}


[Trace - 02:39:27 AM] Sending request 'textDocument/documentHighlight - (119)'.
Params: {
  "textDocument": {
    "uri": "file:///home/bollu/software/edtr/build/test/lake-testdir/Main.lean"
  },
  "position": {
    "line": 2,
    "character": 15
  }
}


[Trace - 02:39:27 AM] Received response 'textDocument/hover - (117)' in 2ms.
Result: null


[Trace - 02:39:27 AM] Received response 'textDocument/codeAction - (118)' in 2ms.
Result: []


[Trace - 02:39:27 AM] Received response 'textDocument/documentHighlight - (119)' in 2ms.
Result: []


